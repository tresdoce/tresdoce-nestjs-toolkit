# docker-compose.yml - Only for local debug purposes
# docker-compose up -d elasticsearch kibana jaeger camunda redis mongo mysql postgres pgadmin
services:
  postgres:
    #image: postgres:13
    image: postgres:15
    container_name: tresdoce-test-container-local-postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      TZ: 'America/Argentina/Buenos_Aires'
      POSTGRES_DB: test_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456

  mysql:
    image: mysql:5.7
    #image: mysql:9.3.0
    container_name: tresdoce-test-container-local-mysql
    restart: always
    ports:
      - '3306:3306'
    environment:
      TZ: 'America/Argentina/Buenos_Aires'
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: test_db
      MYSQL_PASSWORD: 123456
      #MYSQL_USER: root

  mongo:
    #image: mongo:5.0
    image: mongo:8.0.6
    container_name: tresdoce-test-container-local-mongo
    restart: always
    ports:
      - '27017:27017'
    environment:
      TZ: 'America/Argentina/Buenos_Aires'
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
      MONGO_INITDB_DATABASE: test_db

  redis:
    #image: redis:6.2-alpine
    image: redis:7.4.2-alpine
    container_name: tresdoce-test-container-local-redis
    restart: always
    ports:
      - '6379:6379'
    environment:
      TZ: 'America/Argentina/Buenos_Aires'
      REDIS_PORT: 6379
      REDIS_PASSWORD: 123456
      REDIS_HOST: cache
      #REDIS_USERNAME: default
    command: ['redis-server', '--appendonly', 'yes', '--requirepass', '123456']

  dynamodb:
    #image: amazon/dynamodb-local:latest
    #image: amazon/dynamodb-local:1.21.0
    image: amazon/dynamodb-local:2.6.0
    container_name: tresdoce-test-container-local-dynamodb
    restart: always
    ports:
      - '8000:8000'
    environment:
      TZ: 'America/Argentina/Buenos_Aires'
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
      AWS_REGION: us-east-1
