{
  "stats": {
    "suites": 4,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2023-05-11T01:56:50.763Z",
    "end": "2023-05-11T01:56:52.895Z",
    "duration": 2132
  },
  "results": [
    {
      "uuid": "b8e8aa88-ae46-486c-9de5-8fa25b59392d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a9d2b7a2-a96e-48d6-acb1-030265b7444f",
          "title": "@tresdoce-nestjs-toolkit/health",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0547520e-3cd8-4d2c-918f-5e861f6d15fa",
              "title": "Health",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/health/src/__test__/readiness.controller.spec.ts",
              "file": "readiness.controller.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "4467658f-4b2f-4984-a8b1-e054da87b87c",
                  "title": "Ready controller - extend config",
                  "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/health/src/__test__/readiness.controller.spec.ts",
                  "file": "readiness.controller.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "fullTitle": "Health Ready controller - extend config should be defined with extend config",
                      "title": "should be defined with extend config",
                      "timedOut": false,
                      "duration": 1073,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be defined with extend config', () => {\n      expect(controller).toBeDefined();\n    })",
                      "err": {},
                      "uuid": "2c0a0cd8-e8d3-410f-b2fa-7645b69acb3f",
                      "parentUUID": "4467658f-4b2f-4984-a8b1-e054da87b87c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "fullTitle": "Health Ready controller - extend config should be return up services with extend config",
                      "title": "should be return up services with extend config",
                      "timedOut": false,
                      "duration": 6,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be return up services with extend config', async () => {\n      http.pingCheck = jest.fn().mockImplementation(() => mockExpectReadiness.info);\n      typeOrm.pingCheck = jest.fn().mockImplementation(() => mockExpectReadiness.info);\n      redis.pingCheck = jest.fn().mockImplementation(() => mockExpectReadiness.info);\n      health.check = jest.fn().mockImplementation(() => mockExpectReadiness);\n\n      const readinessData = await controller.check();\n      expect(readinessData).toEqual(mockExpectReadiness);\n    })",
                      "err": {},
                      "uuid": "0e4bb905-cec7-4e0f-ba91-9f15a85b319f",
                      "parentUUID": "4467658f-4b2f-4984-a8b1-e054da87b87c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2c0a0cd8-e8d3-410f-b2fa-7645b69acb3f",
                    "0e4bb905-cec7-4e0f-ba91-9f15a85b319f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1079,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                },
                {
                  "uuid": "2ced7043-32d1-41fb-ac54-91dca6c23d46",
                  "title": "Ready controller - simple config",
                  "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/health/src/__test__/readiness.controller.spec.ts",
                  "file": "readiness.controller.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "fullTitle": "Health Ready controller - simple config should be defined with simple config",
                      "title": "should be defined with simple config",
                      "timedOut": false,
                      "duration": 6,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be defined with simple config', () => {\n      expect(controller).toBeDefined();\n    })",
                      "err": {},
                      "uuid": "c838bd3d-998c-48fd-9917-cc986c5b9de9",
                      "parentUUID": "2ced7043-32d1-41fb-ac54-91dca6c23d46",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "fullTitle": "Health Ready controller - simple config should be return up services with simple config",
                      "title": "should be return up services with simple config",
                      "timedOut": false,
                      "duration": 6,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be return up services with simple config', async () => {\n      http.pingCheck = jest.fn().mockImplementation(() => mockExpectReadiness.info);\n      typeOrm.pingCheck = jest.fn().mockImplementation(() => mockExpectReadiness.info);\n      redis.pingCheck = jest.fn().mockImplementation(() => mockExpectReadiness.info);\n      health.check = jest.fn().mockImplementation(() => mockExpectReadiness);\n\n      const readinessData = await controller.check();\n      expect(readinessData).toEqual(mockExpectReadiness);\n    })",
                      "err": {},
                      "uuid": "ae7bfa2c-e82b-41e2-bb57-7a061f2de283",
                      "parentUUID": "2ced7043-32d1-41fb-ac54-91dca6c23d46",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c838bd3d-998c-48fd-9917-cc986c5b9de9",
                    "ae7bfa2c-e82b-41e2-bb57-7a061f2de283"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 12,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "cc286c12-3c54-4bba-90b6-b258d30297ef",
              "title": "HealthModule",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/health/src/__test__/health.module.spec.ts",
              "file": "health.module.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "fullTitle": "HealthModule should be define",
                  "title": "should be define",
                  "timedOut": false,
                  "duration": 704,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be define', async () => {\n    expect(app).toBeDefined();\n  })",
                  "err": {},
                  "uuid": "cd9035a5-b4a0-40b7-9329-ccca60b7e47c",
                  "parentUUID": "cc286c12-3c54-4bba-90b6-b258d30297ef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HealthModule should be return status up",
                  "title": "should be return status up",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status up', async () => {\n    expect(livenessController.getLiveness()).toEqual({ status: 'up' });\n  })",
                  "err": {},
                  "uuid": "fb45802c-719e-4503-a40b-46b814c02732",
                  "parentUUID": "cc286c12-3c54-4bba-90b6-b258d30297ef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HealthModule should be return readiness services",
                  "title": "should be return readiness services",
                  "timedOut": false,
                  "duration": 309,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return readiness services', async () => {\n    const result = await readinessController.check();\n    expect(result).toHaveProperty('details');\n    expect(result).toHaveProperty('error');\n    expect(result).toHaveProperty('info');\n    expect(result).toHaveProperty('status');\n  })",
                  "err": {},
                  "uuid": "792a2dc2-3343-4edf-aece-16a723b7c830",
                  "parentUUID": "cc286c12-3c54-4bba-90b6-b258d30297ef",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd9035a5-b4a0-40b7-9329-ccca60b7e47c",
                "fb45802c-719e-4503-a40b-46b814c02732",
                "792a2dc2-3343-4edf-aece-16a723b7c830"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1027,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "de6eb777-76d9-46aa-9541-85a9a97ae8de",
              "title": "Health - Live controller",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/health/src/__test__/liveness.controller.spec.ts",
              "file": "liveness.controller.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "fullTitle": "Health - Live controller should be defined",
                  "title": "should be defined",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be defined', () => {\n    expect(controller).toBeDefined();\n  })",
                  "err": {},
                  "uuid": "3f9acf6b-a288-4634-b803-885917204edb",
                  "parentUUID": "de6eb777-76d9-46aa-9541-85a9a97ae8de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "Health - Live controller should be return up liveness",
                  "title": "should be return up liveness",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return up liveness', () => {\n    expect(controller.getLiveness()).toEqual({ status: 'up' });\n  })",
                  "err": {},
                  "uuid": "a319bfaf-37df-462a-a612-8d9a9644d510",
                  "parentUUID": "de6eb777-76d9-46aa-9541-85a9a97ae8de",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3f9acf6b-a288-4634-b803-885917204edb",
                "a319bfaf-37df-462a-a612-8d9a9644d510"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "e321c639-b93b-44cd-947e-2f69ca2e6eb4",
              "title": "healthConstants",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/health/src/__test__/constants.spec.ts",
              "file": "constants.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "fullTitle": "healthConstants should be return exclude to prefix global",
                  "title": "should be return exclude to prefix global",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return exclude to prefix global', async () => {\n    expect(controllersExcludes).toEqual(expect.any(Array));\n    expect(controllersExcludes).toMatchObject([\n      {\n        path: '/health/liveness',\n        method: RequestMethod.GET,\n      },\n      {\n        path: '/health/readiness',\n        method: RequestMethod.GET,\n      },\n    ]);\n  })",
                  "err": {},
                  "uuid": "58fb11d6-d314-4bf7-be71-8ea14ea72ee1",
                  "parentUUID": "e321c639-b93b-44cd-947e-2f69ca2e6eb4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": ["58fb11d6-d314-4bf7-be71-8ea14ea72ee1"],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ]
}
