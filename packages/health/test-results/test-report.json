{
  "stats": {
    "suites": 4,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2023-05-11T02:10:45.537Z",
    "end": "2023-05-11T02:10:48.507Z",
    "duration": 2970
  },
  "results": [
    {
      "uuid": "3a495426-c15e-4e7b-94c9-e97f988a34a9",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a88c9483-6f5a-4654-a3aa-91d873b3d6b7",
          "title": "@tresdoce-nestjs-toolkit/health",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "df3bbb6d-98e0-4420-8895-dbcd91f9a241",
              "title": "Health",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/health/src/__test__/readiness.controller.spec.ts",
              "file": "readiness.controller.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "a2c4cfab-d756-4f50-bdc2-a8f40b78fcfa",
                  "title": "Ready controller - extend config",
                  "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/health/src/__test__/readiness.controller.spec.ts",
                  "file": "readiness.controller.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "fullTitle": "Health Ready controller - extend config should be defined with extend config",
                      "title": "should be defined with extend config",
                      "timedOut": false,
                      "duration": 1105,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be defined with extend config', () => {\n      expect(controller).toBeDefined();\n    })",
                      "err": {},
                      "uuid": "3b4e98d8-9b48-436c-abe1-cc927edfd35a",
                      "parentUUID": "a2c4cfab-d756-4f50-bdc2-a8f40b78fcfa",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "fullTitle": "Health Ready controller - extend config should be return up services with extend config",
                      "title": "should be return up services with extend config",
                      "timedOut": false,
                      "duration": 7,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be return up services with extend config', async () => {\n      http.pingCheck = jest.fn().mockImplementation(() => mockExpectReadiness.info);\n      typeOrm.pingCheck = jest.fn().mockImplementation(() => mockExpectReadiness.info);\n      redis.pingCheck = jest.fn().mockImplementation(() => mockExpectReadiness.info);\n      health.check = jest.fn().mockImplementation(() => mockExpectReadiness);\n\n      const readinessData = await controller.check();\n      expect(readinessData).toEqual(mockExpectReadiness);\n    })",
                      "err": {},
                      "uuid": "2ce716b9-6615-4e7b-94de-c0be37c7ffce",
                      "parentUUID": "a2c4cfab-d756-4f50-bdc2-a8f40b78fcfa",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3b4e98d8-9b48-436c-abe1-cc927edfd35a",
                    "2ce716b9-6615-4e7b-94de-c0be37c7ffce"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1112,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                },
                {
                  "uuid": "3ada8cc3-3cf5-4f55-9b52-c23063b4ece3",
                  "title": "Ready controller - simple config",
                  "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/health/src/__test__/readiness.controller.spec.ts",
                  "file": "readiness.controller.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "fullTitle": "Health Ready controller - simple config should be defined with simple config",
                      "title": "should be defined with simple config",
                      "timedOut": false,
                      "duration": 5,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be defined with simple config', () => {\n      expect(controller).toBeDefined();\n    })",
                      "err": {},
                      "uuid": "75506721-d575-4e0a-8ef4-e0895e829030",
                      "parentUUID": "3ada8cc3-3cf5-4f55-9b52-c23063b4ece3",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "fullTitle": "Health Ready controller - simple config should be return up services with simple config",
                      "title": "should be return up services with simple config",
                      "timedOut": false,
                      "duration": 5,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be return up services with simple config', async () => {\n      http.pingCheck = jest.fn().mockImplementation(() => mockExpectReadiness.info);\n      typeOrm.pingCheck = jest.fn().mockImplementation(() => mockExpectReadiness.info);\n      redis.pingCheck = jest.fn().mockImplementation(() => mockExpectReadiness.info);\n      health.check = jest.fn().mockImplementation(() => mockExpectReadiness);\n\n      const readinessData = await controller.check();\n      expect(readinessData).toEqual(mockExpectReadiness);\n    })",
                      "err": {},
                      "uuid": "0251834e-ac4f-4fa4-b192-ad2bc3fa4554",
                      "parentUUID": "3ada8cc3-3cf5-4f55-9b52-c23063b4ece3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "75506721-d575-4e0a-8ef4-e0895e829030",
                    "0251834e-ac4f-4fa4-b192-ad2bc3fa4554"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 10,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "cb83fd8e-684b-4e31-be55-a5d84190650a",
              "title": "HealthModule",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/health/src/__test__/health.module.spec.ts",
              "file": "health.module.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "fullTitle": "HealthModule should be define",
                  "title": "should be define",
                  "timedOut": false,
                  "duration": 546,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be define', async () => {\n    expect(app).toBeDefined();\n  })",
                  "err": {},
                  "uuid": "f0929a44-c281-4f9e-98e2-6fec12976abf",
                  "parentUUID": "cb83fd8e-684b-4e31-be55-a5d84190650a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HealthModule should be return status up",
                  "title": "should be return status up",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status up', async () => {\n    expect(livenessController.getLiveness()).toEqual({ status: 'up' });\n  })",
                  "err": {},
                  "uuid": "cdb133aa-b156-4def-b4d0-d54ab6aa8339",
                  "parentUUID": "cb83fd8e-684b-4e31-be55-a5d84190650a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HealthModule should be return readiness services",
                  "title": "should be return readiness services",
                  "timedOut": false,
                  "duration": 1272,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return readiness services', async () => {\n    const result = await readinessController.check();\n    expect(result).toHaveProperty('details');\n    expect(result).toHaveProperty('error');\n    expect(result).toHaveProperty('info');\n    expect(result).toHaveProperty('status');\n  })",
                  "err": {},
                  "uuid": "555a1253-faaf-4e79-90d3-2a712290e027",
                  "parentUUID": "cb83fd8e-684b-4e31-be55-a5d84190650a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f0929a44-c281-4f9e-98e2-6fec12976abf",
                "cdb133aa-b156-4def-b4d0-d54ab6aa8339",
                "555a1253-faaf-4e79-90d3-2a712290e027"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1831,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "38f4c65c-d7b7-48e3-80f4-038be2637c1f",
              "title": "Health - Live controller",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/health/src/__test__/liveness.controller.spec.ts",
              "file": "liveness.controller.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "fullTitle": "Health - Live controller should be defined",
                  "title": "should be defined",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be defined', () => {\n    expect(controller).toBeDefined();\n  })",
                  "err": {},
                  "uuid": "cbbe26c0-0673-451a-bc2d-19305f696a7b",
                  "parentUUID": "38f4c65c-d7b7-48e3-80f4-038be2637c1f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "Health - Live controller should be return up liveness",
                  "title": "should be return up liveness",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return up liveness', () => {\n    expect(controller.getLiveness()).toEqual({ status: 'up' });\n  })",
                  "err": {},
                  "uuid": "8249fa15-ab38-41f7-9285-d7b44934f0b5",
                  "parentUUID": "38f4c65c-d7b7-48e3-80f4-038be2637c1f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cbbe26c0-0673-451a-bc2d-19305f696a7b",
                "8249fa15-ab38-41f7-9285-d7b44934f0b5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "6885936b-c84e-4260-8501-716ab9f26861",
              "title": "healthConstants",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/health/src/__test__/constants.spec.ts",
              "file": "constants.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "fullTitle": "healthConstants should be return exclude to prefix global",
                  "title": "should be return exclude to prefix global",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return exclude to prefix global', async () => {\n    expect(controllersExcludes).toEqual(expect.any(Array));\n    expect(controllersExcludes).toMatchObject([\n      {\n        path: '/health/liveness',\n        method: RequestMethod.GET,\n      },\n      {\n        path: '/health/readiness',\n        method: RequestMethod.GET,\n      },\n    ]);\n  })",
                  "err": {},
                  "uuid": "5c1bb844-a9e2-4372-aab7-960861f78b03",
                  "parentUUID": "6885936b-c84e-4260-8501-716ab9f26861",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5c1bb844-a9e2-4372-aab7-960861f78b03"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ]
}