{
  "stats": {
    "suites": 3,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2023-05-02T00:49:15.758Z",
    "end": "2023-05-02T00:49:15.766Z",
    "duration": 8
  },
  "results": [
    {
      "uuid": "85f84663-7e2b-41c7-983c-cd11bf789127",
      "title": "@tresdoce-nestjs-toolkit/commons",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8215a552-4805-4d0e-9a0e-1b6907f799bd",
          "title": "@tresdoce-nestjs-toolkit/commons",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "build-config > should be return jest config is build",
              "fullTitle": "should be return jest config is build",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": null,
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "import { buildConfig } from '../index';\ndescribe('build-config', () => {\n  const INIT_ENVS = process.env;\n\n  beforeEach(() => {\n    jest.resetModules();\n    process.env = { ...INIT_ENVS };\n  });\n\n  afterAll(() => {\n    process.env = INIT_ENVS;\n  });\n\n  it('should be return jest config is build', () => {\n    process.env.NODE_ENV = 'build';\n    const config = buildConfig({ output: {}, optimization: {} });\n    expect(config).not.toBe(null);\n    expect(typeof config).toBe('object');\n    expect(config).toBeDefined();\n    expect(config.mode).toEqual('production');\n  });\n\n  it('should be return jest config not is build', () => {\n    process.env.NODE_ENV = 'dev';\n    const config = buildConfig({ output: {}, optimization: {} });\n    expect(config).not.toBe(null);\n    expect(typeof config).toBe('object');\n    expect(config).toBeDefined();\n    expect(config.mode).toEqual('none');\n  });\n});\n",
              "err": {},
              "uuid": "d98aa236-10f1-4685-bf09-a761a9dfbe01",
              "parentUUID": "8215a552-4805-4d0e-9a0e-1b6907f799bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "build-config > should be return jest config not is build",
              "fullTitle": "should be return jest config not is build",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": null,
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "import { buildConfig } from '../index';\ndescribe('build-config', () => {\n  const INIT_ENVS = process.env;\n\n  beforeEach(() => {\n    jest.resetModules();\n    process.env = { ...INIT_ENVS };\n  });\n\n  afterAll(() => {\n    process.env = INIT_ENVS;\n  });\n\n  it('should be return jest config is build', () => {\n    process.env.NODE_ENV = 'build';\n    const config = buildConfig({ output: {}, optimization: {} });\n    expect(config).not.toBe(null);\n    expect(typeof config).toBe('object');\n    expect(config).toBeDefined();\n    expect(config.mode).toEqual('production');\n  });\n\n  it('should be return jest config not is build', () => {\n    process.env.NODE_ENV = 'dev';\n    const config = buildConfig({ output: {}, optimization: {} });\n    expect(config).not.toBe(null);\n    expect(typeof config).toBe('object');\n    expect(config).toBeDefined();\n    expect(config.mode).toEqual('none');\n  });\n});\n",
              "err": {},
              "uuid": "cfb8069b-f9b1-4032-89b3-710382eb75ab",
              "parentUUID": "8215a552-4805-4d0e-9a0e-1b6907f799bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "testing-library > should be return jest config",
              "fullTitle": "should be return jest config",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": null,
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "import { jestConfig } from '../index';\n\ndescribe('testing-library', () => {\n  it('should be return jest config', () => {\n    const config = jestConfig();\n    expect(config).not.toBe(null);\n    expect(typeof config).toBe('object');\n    expect(config).toBeDefined();\n  });\n});\n",
              "err": {},
              "uuid": "3a4e66c0-b61b-4a47-aeb6-560a0b38e0b7",
              "parentUUID": "8215a552-4805-4d0e-9a0e-1b6907f799bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "eslint-config > should be return jest config",
              "fullTitle": "should be return jest config",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": null,
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "import { eslintConfig } from '../index';\ndescribe('eslint-config', () => {\n  it('should be return jest config', () => {\n    const config = eslintConfig();\n    expect(config).not.toBe(null);\n    expect(typeof config).toBe('object');\n    expect(config).toBeDefined();\n  });\n});\n",
              "err": {},
              "uuid": "9d85277d-649f-42a4-97f8-1b762153502b",
              "parentUUID": "8215a552-4805-4d0e-9a0e-1b6907f799bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d98aa236-10f1-4685-bf09-a761a9dfbe01",
            "cfb8069b-f9b1-4032-89b3-710382eb75ab",
            "3a4e66c0-b61b-4a47-aeb6-560a0b38e0b7",
            "9d85277d-649f-42a4-97f8-1b762153502b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ]
}
