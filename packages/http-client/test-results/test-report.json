{
  "stats": {
    "suites": 3,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2023-05-11T01:58:03.522Z",
    "end": "2023-05-11T01:58:07.193Z",
    "duration": 3671
  },
  "results": [
    {
      "uuid": "b4be5b60-5b6f-488d-a756-bafc1646ec9a",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4ced6e20-a599-4ac5-bb6f-e8f93bb04508",
          "title": "@tresdoce-nestjs-toolkit/http-client",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "540995cb-21d1-41af-a758-ff4f49cce283",
              "title": "HttpService",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/http-client/src/__test__/http.service.spec.ts",
              "file": "http.service.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "fullTitle": "HttpService should be defined",
                  "title": "should be defined",
                  "timedOut": false,
                  "duration": 254,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be defined', () => {\n    expect(service).toBeDefined();\n    expect(service).toBeInstanceOf(HttpClientService);\n    expect(service.axiosRef).not.toBeNull();\n  })",
                  "err": {},
                  "uuid": "8b2882d8-3e37-41af-8114-d06a07e536f1",
                  "parentUUID": "540995cb-21d1-41af-a758-ff4f49cce283",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return status 200 - request",
                  "title": "should be return status 200 - request",
                  "timedOut": false,
                  "duration": 1138,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status 200 - request', async () => {\n    const { status, data } = await service.request({\n      url: `${API_NESTJS_STARTER}/posts`,\n      method: 'GET',\n    });\n    expect(status).toBe(200);\n    expect(data.length).toBeGreaterThan(0);\n  })",
                  "err": {},
                  "uuid": "34cabfbf-f865-4720-a0dc-4caa55783ac3",
                  "parentUUID": "540995cb-21d1-41af-a758-ff4f49cce283",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return status 200 - get",
                  "title": "should be return status 200 - get",
                  "timedOut": false,
                  "duration": 89,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status 200 - get', async () => {\n    const { status, data } = await service.get(`${API_NESTJS_STARTER}/posts`);\n    expect(status).toBe(200);\n    expect(data.length).toBeGreaterThan(0);\n  })",
                  "err": {},
                  "uuid": "e30ec205-9b57-4a44-a485-c9b30c837d0a",
                  "parentUUID": "540995cb-21d1-41af-a758-ff4f49cce283",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return status 201 - post",
                  "title": "should be return status 201 - post",
                  "timedOut": false,
                  "duration": 428,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status 201 - post', async () => {\n    const { status, data } = await service.post(`${API_NESTJS_STARTER}/posts`, {\n      data: mockRequestBody,\n    });\n    expect(status).toBe(201);\n    expect(data).toEqual({\n      ...mockRequestBody,\n      id: 101,\n    });\n  })",
                  "err": {},
                  "uuid": "98dc52a2-ca59-49b3-8a04-caa077b4a11e",
                  "parentUUID": "540995cb-21d1-41af-a758-ff4f49cce283",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return status 200 - get by id",
                  "title": "should be return status 200 - get by id",
                  "timedOut": false,
                  "duration": 94,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status 200 - get by id', async () => {\n    const { status, data } = await service.get(`${API_NESTJS_STARTER}/posts/1`);\n    expect(status).toBe(200);\n    expect(data).toEqual(mockRequestBody);\n  })",
                  "err": {},
                  "uuid": "a530935c-72f8-43e5-8331-7a326020788a",
                  "parentUUID": "540995cb-21d1-41af-a758-ff4f49cce283",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return status 200 - put",
                  "title": "should be return status 200 - put",
                  "timedOut": false,
                  "duration": 456,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status 200 - put', async () => {\n    const { status, data } = await service.put(`${API_NESTJS_STARTER}/posts/1`, {\n      data: {\n        ...mockRequestBody,\n        title: 'mockito',\n      },\n    });\n    expect(status).toBe(200);\n    expect(data).toEqual({ ...mockRequestBody, id: 1, title: 'mockito' });\n  })",
                  "err": {},
                  "uuid": "9ee2255c-dde2-4091-a62b-27ea40313ae8",
                  "parentUUID": "540995cb-21d1-41af-a758-ff4f49cce283",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return status 200 - delete",
                  "title": "should be return status 200 - delete",
                  "timedOut": false,
                  "duration": 441,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status 200 - delete', async () => {\n    const { status, data } = await service.delete(`${API_NESTJS_STARTER}/posts/2`);\n    expect(status).toBe(200);\n    expect(data).toEqual({});\n  })",
                  "err": {},
                  "uuid": "d31b1d25-0706-46da-af99-58057a9b69c6",
                  "parentUUID": "540995cb-21d1-41af-a758-ff4f49cce283",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return status 200 - patch",
                  "title": "should be return status 200 - patch",
                  "timedOut": false,
                  "duration": 412,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status 200 - patch', async () => {\n    const { status, data } = await service.patch(`${API_NESTJS_STARTER}/posts/1`, {\n      data: {\n        ...mockRequestBody,\n        title: 'mockito',\n      },\n    });\n    expect(status).toBe(200);\n    expect(data).toEqual({ ...mockRequestBody, id: 1, title: 'mockito' });\n  })",
                  "err": {},
                  "uuid": "7d2a477c-85da-4179-a0ac-df9bd98d555d",
                  "parentUUID": "540995cb-21d1-41af-a758-ff4f49cce283",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return status 200 - head",
                  "title": "should be return status 200 - head",
                  "timedOut": false,
                  "duration": 85,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status 200 - head', async () => {\n    const { status, headers } = await service.head(`${API_NESTJS_STARTER}/posts`);\n    expect(status).toBe(200);\n    expect(headers).toHaveProperty('etag');\n  })",
                  "err": {},
                  "uuid": "d146cdf8-fafd-4ba6-b8f1-b6e8590872e0",
                  "parentUUID": "540995cb-21d1-41af-a758-ff4f49cce283",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return error",
                  "title": "should be return error",
                  "timedOut": false,
                  "duration": 89,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return error', async () => {\n    try {\n      const { data } = await service.get(`${API_NESTJS_STARTER}/postss`);\n      expect(data).toBe(200);\n    } catch (error) {\n      expect(error.response.status).toBe(404);\n      expect(error.message).toBe('Request failed with status code 404');\n    }\n  })",
                  "err": {},
                  "uuid": "c20727e1-c94f-46be-9a5a-b7da8fb2f906",
                  "parentUUID": "540995cb-21d1-41af-a758-ff4f49cce283",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8b2882d8-3e37-41af-8114-d06a07e536f1",
                "34cabfbf-f865-4720-a0dc-4caa55783ac3",
                "e30ec205-9b57-4a44-a485-c9b30c837d0a",
                "98dc52a2-ca59-49b3-8a04-caa077b4a11e",
                "a530935c-72f8-43e5-8331-7a326020788a",
                "9ee2255c-dde2-4091-a62b-27ea40313ae8",
                "d31b1d25-0706-46da-af99-58057a9b69c6",
                "7d2a477c-85da-4179-a0ac-df9bd98d555d",
                "d146cdf8-fafd-4ba6-b8f1-b6e8590872e0",
                "c20727e1-c94f-46be-9a5a-b7da8fb2f906"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3486,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "030a9221-91b1-4a04-80d0-453d82893ea4",
              "title": "HttpModule",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/http-client/src/__test__/http.module.spec.ts",
              "file": "http.module.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "a36706dd-4e90-4125-88a2-cfd4205ca142",
                  "title": "registerAsync useFactory",
                  "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/http-client/src/__test__/http.module.spec.ts",
                  "file": "http.module.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "fullTitle": "HttpModule registerAsync useFactory should be define",
                      "title": "should be define",
                      "timedOut": false,
                      "duration": 80,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be define', async () => {\n      expect(app).toBeDefined();\n    })",
                      "err": {},
                      "uuid": "57a4624e-f549-451b-9da4-0a7338f979b5",
                      "parentUUID": "a36706dd-4e90-4125-88a2-cfd4205ca142",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": ["57a4624e-f549-451b-9da4-0a7338f979b5"],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 80,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                },
                {
                  "uuid": "b8ad6ef3-90b7-4f5c-b16e-392f34907360",
                  "title": "registerAsync useClass",
                  "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/http-client/src/__test__/http.module.spec.ts",
                  "file": "http.module.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "fullTitle": "HttpModule registerAsync useClass should be define",
                      "title": "should be define",
                      "timedOut": false,
                      "duration": 8,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be define', async () => {\n      expect(app).toBeDefined();\n    })",
                      "err": {},
                      "uuid": "12e586c2-d992-40e4-9266-0289c8b687ea",
                      "parentUUID": "b8ad6ef3-90b7-4f5c-b16e-392f34907360",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": ["12e586c2-d992-40e4-9266-0289c8b687ea"],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 8,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                },
                {
                  "uuid": "7873dcd2-5ecd-45a5-b678-e4fb6a59e033",
                  "title": "registerAsync useExisting",
                  "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/http-client/src/__test__/http.module.spec.ts",
                  "file": "http.module.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "fullTitle": "HttpModule registerAsync useExisting should be define",
                      "title": "should be define",
                      "timedOut": false,
                      "duration": 7,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be define', async () => {\n      expect(app).toBeDefined();\n    })",
                      "err": {},
                      "uuid": "498ccbc3-85a3-4b81-9291-11681f5093cd",
                      "parentUUID": "7873dcd2-5ecd-45a5-b678-e4fb6a59e033",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": ["498ccbc3-85a3-4b81-9291-11681f5093cd"],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 7,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                },
                {
                  "uuid": "ee006991-e1de-44f1-b581-a814c02d0155",
                  "title": "register",
                  "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/http-client/src/__test__/http.module.spec.ts",
                  "file": "http.module.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "fullTitle": "HttpModule register should be define",
                      "title": "should be define",
                      "timedOut": false,
                      "duration": 11,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be define', async () => {\n      expect(app).toBeDefined();\n    })",
                      "err": {},
                      "uuid": "0e8b33b3-d861-444b-8ac9-dc3a2809589c",
                      "parentUUID": "ee006991-e1de-44f1-b581-a814c02d0155",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": ["0e8b33b3-d861-444b-8ac9-dc3a2809589c"],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 11,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "91e66649-51de-49ac-abeb-3e1f8acb77fa",
              "title": "HttpInterceptor",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/http-client/src/__test__/http.interceptor.spec.ts",
              "file": "http.interceptor.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "fullTitle": "HttpInterceptor should be defined",
                  "title": "should be defined",
                  "timedOut": false,
                  "duration": 74,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be defined', () => {\n    expect(interceptor).toBeDefined();\n  })",
                  "err": {},
                  "uuid": "c52c7d50-acbf-4a64-b29e-3c38982698a7",
                  "parentUUID": "91e66649-51de-49ac-abeb-3e1f8acb77fa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpInterceptor should be intercept and pass headers",
                  "title": "should be intercept and pass headers",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be intercept and pass headers', async () => {\n    await interceptor.intercept(executionContext, callHandler);\n    expect(callHandler.handle).toBeCalledTimes(1);\n  })",
                  "err": {},
                  "uuid": "e353537b-ef1e-4b6f-8b06-4dfdedc476e5",
                  "parentUUID": "91e66649-51de-49ac-abeb-3e1f8acb77fa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c52c7d50-acbf-4a64-b29e-3c38982698a7",
                "e353537b-ef1e-4b6f-8b06-4dfdedc476e5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 79,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ]
}
