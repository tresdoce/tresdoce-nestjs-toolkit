{
  "stats": {
    "suites": 3,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2023-05-11T02:11:42.387Z",
    "end": "2023-05-11T02:11:46.104Z",
    "duration": 3717
  },
  "results": [
    {
      "uuid": "1c5cd0c6-01a3-4aeb-b865-0495c10d1522",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "da487087-ddac-4331-8fa6-04a201be85e2",
          "title": "@tresdoce-nestjs-toolkit/http-client",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "42970a3c-5aa3-46d2-8aff-fbc0bbcacf70",
              "title": "HttpService",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/http-client/src/__test__/http.service.spec.ts",
              "file": "http.service.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "fullTitle": "HttpService should be defined",
                  "title": "should be defined",
                  "timedOut": false,
                  "duration": 157,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be defined', () => {\n    expect(service).toBeDefined();\n    expect(service).toBeInstanceOf(HttpClientService);\n    expect(service.axiosRef).not.toBeNull();\n  })",
                  "err": {},
                  "uuid": "d72d6283-9405-4b64-9e0c-0a2797951ea4",
                  "parentUUID": "42970a3c-5aa3-46d2-8aff-fbc0bbcacf70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return status 200 - request",
                  "title": "should be return status 200 - request",
                  "timedOut": false,
                  "duration": 1170,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status 200 - request', async () => {\n    const { status, data } = await service.request({\n      url: `${API_NESTJS_STARTER}/posts`,\n      method: 'GET',\n    });\n    expect(status).toBe(200);\n    expect(data.length).toBeGreaterThan(0);\n  })",
                  "err": {},
                  "uuid": "da81a052-34af-4102-9f45-d9a722a23a70",
                  "parentUUID": "42970a3c-5aa3-46d2-8aff-fbc0bbcacf70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return status 200 - get",
                  "title": "should be return status 200 - get",
                  "timedOut": false,
                  "duration": 97,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status 200 - get', async () => {\n    const { status, data } = await service.get(`${API_NESTJS_STARTER}/posts`);\n    expect(status).toBe(200);\n    expect(data.length).toBeGreaterThan(0);\n  })",
                  "err": {},
                  "uuid": "92051022-c6a7-444d-8ccb-cbe7e2633035",
                  "parentUUID": "42970a3c-5aa3-46d2-8aff-fbc0bbcacf70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return status 201 - post",
                  "title": "should be return status 201 - post",
                  "timedOut": false,
                  "duration": 499,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status 201 - post', async () => {\n    const { status, data } = await service.post(`${API_NESTJS_STARTER}/posts`, {\n      data: mockRequestBody,\n    });\n    expect(status).toBe(201);\n    expect(data).toEqual({\n      ...mockRequestBody,\n      id: 101,\n    });\n  })",
                  "err": {},
                  "uuid": "3ef16eb9-f2eb-488a-b97e-299fa483f8b7",
                  "parentUUID": "42970a3c-5aa3-46d2-8aff-fbc0bbcacf70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return status 200 - get by id",
                  "title": "should be return status 200 - get by id",
                  "timedOut": false,
                  "duration": 79,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status 200 - get by id', async () => {\n    const { status, data } = await service.get(`${API_NESTJS_STARTER}/posts/1`);\n    expect(status).toBe(200);\n    expect(data).toEqual(mockRequestBody);\n  })",
                  "err": {},
                  "uuid": "d2479a71-0e28-4ab0-8644-2027b2e6d197",
                  "parentUUID": "42970a3c-5aa3-46d2-8aff-fbc0bbcacf70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return status 200 - put",
                  "title": "should be return status 200 - put",
                  "timedOut": false,
                  "duration": 433,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status 200 - put', async () => {\n    const { status, data } = await service.put(`${API_NESTJS_STARTER}/posts/1`, {\n      data: {\n        ...mockRequestBody,\n        title: 'mockito',\n      },\n    });\n    expect(status).toBe(200);\n    expect(data).toEqual({ ...mockRequestBody, id: 1, title: 'mockito' });\n  })",
                  "err": {},
                  "uuid": "db58a336-cb41-46b0-8a62-ac6d5fb1c9e8",
                  "parentUUID": "42970a3c-5aa3-46d2-8aff-fbc0bbcacf70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return status 200 - delete",
                  "title": "should be return status 200 - delete",
                  "timedOut": false,
                  "duration": 406,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status 200 - delete', async () => {\n    const { status, data } = await service.delete(`${API_NESTJS_STARTER}/posts/2`);\n    expect(status).toBe(200);\n    expect(data).toEqual({});\n  })",
                  "err": {},
                  "uuid": "61584056-ec43-4645-9376-2a344bd4cc50",
                  "parentUUID": "42970a3c-5aa3-46d2-8aff-fbc0bbcacf70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return status 200 - patch",
                  "title": "should be return status 200 - patch",
                  "timedOut": false,
                  "duration": 515,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status 200 - patch', async () => {\n    const { status, data } = await service.patch(`${API_NESTJS_STARTER}/posts/1`, {\n      data: {\n        ...mockRequestBody,\n        title: 'mockito',\n      },\n    });\n    expect(status).toBe(200);\n    expect(data).toEqual({ ...mockRequestBody, id: 1, title: 'mockito' });\n  })",
                  "err": {},
                  "uuid": "7d831827-459b-42b6-b88a-2bcc42c2a84e",
                  "parentUUID": "42970a3c-5aa3-46d2-8aff-fbc0bbcacf70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return status 200 - head",
                  "title": "should be return status 200 - head",
                  "timedOut": false,
                  "duration": 81,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return status 200 - head', async () => {\n    const { status, headers } = await service.head(`${API_NESTJS_STARTER}/posts`);\n    expect(status).toBe(200);\n    expect(headers).toHaveProperty('etag');\n  })",
                  "err": {},
                  "uuid": "7a37b78c-396a-419e-ae1f-c2a96e83d593",
                  "parentUUID": "42970a3c-5aa3-46d2-8aff-fbc0bbcacf70",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpService should be return error",
                  "title": "should be return error",
                  "timedOut": false,
                  "duration": 111,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return error', async () => {\n    try {\n      const { data } = await service.get(`${API_NESTJS_STARTER}/postss`);\n      expect(data).toBe(200);\n    } catch (error) {\n      expect(error.response.status).toBe(404);\n      expect(error.message).toBe('Request failed with status code 404');\n    }\n  })",
                  "err": {},
                  "uuid": "36454daf-fc9d-4e0b-9a1f-f1db2573137a",
                  "parentUUID": "42970a3c-5aa3-46d2-8aff-fbc0bbcacf70",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d72d6283-9405-4b64-9e0c-0a2797951ea4",
                "da81a052-34af-4102-9f45-d9a722a23a70",
                "92051022-c6a7-444d-8ccb-cbe7e2633035",
                "3ef16eb9-f2eb-488a-b97e-299fa483f8b7",
                "d2479a71-0e28-4ab0-8644-2027b2e6d197",
                "db58a336-cb41-46b0-8a62-ac6d5fb1c9e8",
                "61584056-ec43-4645-9376-2a344bd4cc50",
                "7d831827-459b-42b6-b88a-2bcc42c2a84e",
                "7a37b78c-396a-419e-ae1f-c2a96e83d593",
                "36454daf-fc9d-4e0b-9a1f-f1db2573137a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3548,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "03004383-c2f4-43ce-a940-cddcabf96de7",
              "title": "HttpModule",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/http-client/src/__test__/http.module.spec.ts",
              "file": "http.module.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "bd1fece8-3df5-48e1-aee0-a2e909bb9c5c",
                  "title": "registerAsync useFactory",
                  "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/http-client/src/__test__/http.module.spec.ts",
                  "file": "http.module.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "fullTitle": "HttpModule registerAsync useFactory should be define",
                      "title": "should be define",
                      "timedOut": false,
                      "duration": 78,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be define', async () => {\n      expect(app).toBeDefined();\n    })",
                      "err": {},
                      "uuid": "ed00f643-c232-4cf0-ad77-9f94232df9cf",
                      "parentUUID": "bd1fece8-3df5-48e1-aee0-a2e909bb9c5c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ed00f643-c232-4cf0-ad77-9f94232df9cf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 78,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                },
                {
                  "uuid": "b238a4e7-e9ab-48b0-891f-dcd121f1517a",
                  "title": "registerAsync useClass",
                  "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/http-client/src/__test__/http.module.spec.ts",
                  "file": "http.module.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "fullTitle": "HttpModule registerAsync useClass should be define",
                      "title": "should be define",
                      "timedOut": false,
                      "duration": 6,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be define', async () => {\n      expect(app).toBeDefined();\n    })",
                      "err": {},
                      "uuid": "4ea2909b-8fbe-4c10-bf35-cec064698ca6",
                      "parentUUID": "b238a4e7-e9ab-48b0-891f-dcd121f1517a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4ea2909b-8fbe-4c10-bf35-cec064698ca6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 6,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                },
                {
                  "uuid": "fa710eb4-b8f3-4126-a0d4-855ae4bae38b",
                  "title": "registerAsync useExisting",
                  "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/http-client/src/__test__/http.module.spec.ts",
                  "file": "http.module.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "fullTitle": "HttpModule registerAsync useExisting should be define",
                      "title": "should be define",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be define', async () => {\n      expect(app).toBeDefined();\n    })",
                      "err": {},
                      "uuid": "8b118457-f9c7-467d-a95b-c73d365b0733",
                      "parentUUID": "fa710eb4-b8f3-4126-a0d4-855ae4bae38b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8b118457-f9c7-467d-a95b-c73d365b0733"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                },
                {
                  "uuid": "da7a1076-f615-4894-bbb0-7cc32e621b71",
                  "title": "register",
                  "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/http-client/src/__test__/http.module.spec.ts",
                  "file": "http.module.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "fullTitle": "HttpModule register should be define",
                      "title": "should be define",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be define', async () => {\n      expect(app).toBeDefined();\n    })",
                      "err": {},
                      "uuid": "30f46d44-7aef-450d-91ec-6f80206d27b2",
                      "parentUUID": "da7a1076-f615-4894-bbb0-7cc32e621b71",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "30f46d44-7aef-450d-91ec-6f80206d27b2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "b0b90396-c341-473f-b9e5-bc29ba3edc68",
              "title": "HttpInterceptor",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/http-client/src/__test__/http.interceptor.spec.ts",
              "file": "http.interceptor.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "fullTitle": "HttpInterceptor should be defined",
                  "title": "should be defined",
                  "timedOut": false,
                  "duration": 72,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be defined', () => {\n    expect(interceptor).toBeDefined();\n  })",
                  "err": {},
                  "uuid": "aaa91202-7ff5-48ba-92c1-fd601dd7c61d",
                  "parentUUID": "b0b90396-c341-473f-b9e5-bc29ba3edc68",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "HttpInterceptor should be intercept and pass headers",
                  "title": "should be intercept and pass headers",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be intercept and pass headers', async () => {\n    await interceptor.intercept(executionContext, callHandler);\n    expect(callHandler.handle).toBeCalledTimes(1);\n  })",
                  "err": {},
                  "uuid": "1ed08110-47f2-4c9c-8188-cfea08b1167e",
                  "parentUUID": "b0b90396-c341-473f-b9e5-bc29ba3edc68",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aaa91202-7ff5-48ba-92c1-fd601dd7c61d",
                "1ed08110-47f2-4c9c-8188-cfea08b1167e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 77,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ]
}