{
  "stats": {
    "suites": 4,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2023-05-11T01:56:29.020Z",
    "end": "2023-05-11T01:56:29.037Z",
    "duration": 17
  },
  "results": [
    {
      "uuid": "08c8f091-1eaf-48e8-84bc-63fe5f903a80",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d19e4e84-bfd2-4761-ba20-988a14e8142c",
          "title": "@tresdoce-nestjs-toolkit/core",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "86620730-0215-4b95-b370-2792b7451d28",
              "title": "commons",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/commons.spec.ts",
              "file": "commons.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "cf5bfa09-afaf-437b-8525-5b316b41fb34",
                  "title": "with env context",
                  "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/commons.spec.ts",
                  "file": "commons.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "fullTitle": "commons with env context should be return commons exclude paths with context",
                      "title": "should be return commons exclude paths with context",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be return commons exclude paths with context', () => {\n      expect(corePathsExcludes()).not.toBe(null);\n      expect(corePathsExcludes()).toBeDefined();\n      expect(corePathsExcludes()).toBeInstanceOf(Array);\n\n      expect(corePathsExcludes()).toContainObject({\n        path: `/v1/api-test/health/liveness`,\n        method: RequestMethod.GET,\n      });\n\n      expect(corePathsExcludes()).toContainObject({\n        path: `/v1/api-test/health/readiness`,\n        method: RequestMethod.GET,\n      });\n\n      expect(corePathsExcludes()).toContainObject({\n        path: `/v1/api-test/info`,\n        method: RequestMethod.GET,\n      });\n    })",
                      "err": {},
                      "uuid": "f1b0b534-8d57-4805-9605-c7bab2998e0c",
                      "parentUUID": "cf5bfa09-afaf-437b-8525-5b316b41fb34",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "fullTitle": "commons with env context should be return array of exclude paths with context",
                      "title": "should be return array of exclude paths with context",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be return array of exclude paths with context', () => {\n      expect(excludePaths()).not.toBe(null);\n      expect(excludePaths()).toBeDefined();\n      expect(excludePaths()).toBeInstanceOf(Array);\n      expect(excludePaths()).toEqual([\n        `/v1/api-test/health/liveness`,\n        `/v1/api-test/health/readiness`,\n        `/v1/api-test/info`,\n      ]);\n    })",
                      "err": {},
                      "uuid": "648fe2fa-24b0-416a-8153-6905a8bce378",
                      "parentUUID": "cf5bfa09-afaf-437b-8525-5b316b41fb34",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f1b0b534-8d57-4805-9605-c7bab2998e0c",
                    "648fe2fa-24b0-416a-8153-6905a8bce378"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 5,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                },
                {
                  "uuid": "7ec728f6-1135-4f7e-9c63-2d11fc0e1b44",
                  "title": "without env context",
                  "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/commons.spec.ts",
                  "file": "commons.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "fullTitle": "commons without env context should be return commons exclude paths without context",
                      "title": "should be return commons exclude paths without context",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be return commons exclude paths without context', () => {\n      expect(corePathsExcludes()).not.toBe(null);\n      expect(corePathsExcludes()).toBeDefined();\n      expect(corePathsExcludes()).toBeInstanceOf(Array);\n\n      expect(corePathsExcludes()).toContainObject({\n        path: '/health/liveness',\n        method: RequestMethod.GET,\n      });\n\n      expect(corePathsExcludes()).toContainObject({\n        path: '/health/readiness',\n        method: RequestMethod.GET,\n      });\n\n      expect(corePathsExcludes()).toContainObject({\n        path: '/info',\n        method: RequestMethod.GET,\n      });\n    })",
                      "err": {},
                      "uuid": "5c3fc210-c5dd-42e2-8d55-44011b1f10a5",
                      "parentUUID": "7ec728f6-1135-4f7e-9c63-2d11fc0e1b44",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "fullTitle": "commons without env context should be return array of exclude paths without context",
                      "title": "should be return array of exclude paths without context",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be return array of exclude paths without context', () => {\n      expect(excludePaths()).not.toBe(null);\n      expect(excludePaths()).toBeDefined();\n      expect(excludePaths()).toBeInstanceOf(Array);\n      expect(excludePaths()).toEqual(['/health/liveness', '/health/readiness', '/info']);\n    })",
                      "err": {},
                      "uuid": "c6cd8b93-bdc0-4123-875f-57821e2981c3",
                      "parentUUID": "7ec728f6-1135-4f7e-9c63-2d11fc0e1b44",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5c3fc210-c5dd-42e2-8d55-44011b1f10a5",
                    "c6cd8b93-bdc0-4123-875f-57821e2981c3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "73ef376b-1dfd-4484-ac36-3a610bc100e6",
              "title": "Public decorator",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/public.decorator.spec.ts",
              "file": "public.decorator.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "fullTitle": "Public decorator should be defined",
                  "title": "should be defined",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be defined', async () => {\n    expect(Public()).toBeDefined();\n  })",
                  "err": {},
                  "uuid": "25b44de5-f10a-4b4c-a784-2ef1f5d96a71",
                  "parentUUID": "73ef376b-1dfd-4484-ac36-3a610bc100e6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "Public decorator should be return key",
                  "title": "should be return key",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return key', async () => {\n    expect(IS_PUBLIC_KEY).toBe('isPublic');\n  })",
                  "err": {},
                  "uuid": "2d4b16e5-5fb2-428c-8cc9-21aa9dac68fb",
                  "parentUUID": "73ef376b-1dfd-4484-ac36-3a610bc100e6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "25b44de5-f10a-4b4c-a784-2ef1f5d96a71",
                "2d4b16e5-5fb2-428c-8cc9-21aa9dac68fb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "d27842ff-7d5d-498c-8de1-87dfea94e084",
              "title": "https-certificate",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/https-certificate.spec.ts",
              "file": "https-certificate.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "fullTitle": "https-certificate should be return https certificate config",
                  "title": "should be return https certificate config",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return https certificate config', () => {\n    const crtPath = path.resolve(__dirname, './utils/localhost.crt');\n    const keyPath = path.resolve(__dirname, './utils/localhost.key');\n\n    const config = setHttpsOptions(crtPath, keyPath);\n    expect(typeof config).toBe('object');\n    expect(config).toBeDefined();\n    expect(config.cert).not.toEqual('');\n    expect(config.key).not.toEqual('');\n  })",
                  "err": {},
                  "uuid": "f70d040f-2402-44b7-a1fc-66e13a8717cd",
                  "parentUUID": "d27842ff-7d5d-498c-8de1-87dfea94e084",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "https-certificate should be return https certificate config empty",
                  "title": "should be return https certificate config empty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return https certificate config empty', () => {\n    const crtPath = path.resolve(__dirname, './utils/my-localhost.crt');\n    const keyPath = path.resolve(__dirname, './utils/my-localhost.key');\n\n    const config = setHttpsOptions(crtPath, keyPath);\n    expect(typeof config).toBe('object');\n    expect(config).toBeDefined();\n    expect(config.cert).toEqual('');\n    expect(config.key).toEqual('');\n  })",
                  "err": {},
                  "uuid": "30bf8ef7-44a1-4d7e-9a71-7e3c67b2e2b4",
                  "parentUUID": "d27842ff-7d5d-498c-8de1-87dfea94e084",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f70d040f-2402-44b7-a1fc-66e13a8717cd",
                "30bf8ef7-44a1-4d7e-9a71-7e3c67b2e2b4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "8e66e6fd-87ce-4a60-b9e4-97fcb7023d69",
              "title": "Public decorator",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/roles.decorator.spec.ts",
              "file": "roles.decorator.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "fullTitle": "Public decorator should be defined",
                  "title": "should be defined",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be defined', async () => {\n    expect(Roles('admin')).toBeDefined();\n    expect(Roles('admin', 'user')).toBeDefined();\n  })",
                  "err": {},
                  "uuid": "0442c5d6-70f3-47c4-8203-d937659cabb0",
                  "parentUUID": "8e66e6fd-87ce-4a60-b9e4-97fcb7023d69",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "Public decorator should be return key",
                  "title": "should be return key",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return key', async () => {\n    expect(ROLES_KEY).toBe('roles');\n  })",
                  "err": {},
                  "uuid": "530219b4-6cde-4321-bedb-b1f68a4f6945",
                  "parentUUID": "8e66e6fd-87ce-4a60-b9e4-97fcb7023d69",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0442c5d6-70f3-47c4-8203-d937659cabb0",
                "530219b4-6cde-4321-bedb-b1f68a4f6945"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ]
}
