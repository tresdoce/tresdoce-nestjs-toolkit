{
  "stats": {
    "suites": 4,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2023-05-11T02:11:26.429Z",
    "end": "2023-05-11T02:11:26.442Z",
    "duration": 13
  },
  "results": [
    {
      "uuid": "085519d6-aeb5-446b-928e-96d5c9dba1be",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ad18968f-2fb7-4b54-95ab-d13c9a855755",
          "title": "@tresdoce-nestjs-toolkit/core",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2f7be800-5cc1-4f4a-a7df-5c288fc061af",
              "title": "commons",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/commons.spec.ts",
              "file": "commons.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "12b62165-cb63-43eb-9b35-7073afb3ee2a",
                  "title": "with env context",
                  "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/commons.spec.ts",
                  "file": "commons.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "fullTitle": "commons with env context should be return commons exclude paths with context",
                      "title": "should be return commons exclude paths with context",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be return commons exclude paths with context', () => {\n      expect(corePathsExcludes()).not.toBe(null);\n      expect(corePathsExcludes()).toBeDefined();\n      expect(corePathsExcludes()).toBeInstanceOf(Array);\n\n      expect(corePathsExcludes()).toContainObject({\n        path: `/v1/api-test/health/liveness`,\n        method: RequestMethod.GET,\n      });\n\n      expect(corePathsExcludes()).toContainObject({\n        path: `/v1/api-test/health/readiness`,\n        method: RequestMethod.GET,\n      });\n\n      expect(corePathsExcludes()).toContainObject({\n        path: `/v1/api-test/info`,\n        method: RequestMethod.GET,\n      });\n    })",
                      "err": {},
                      "uuid": "9f0466a1-998e-4576-80c8-501d85c584ac",
                      "parentUUID": "12b62165-cb63-43eb-9b35-7073afb3ee2a",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "fullTitle": "commons with env context should be return array of exclude paths with context",
                      "title": "should be return array of exclude paths with context",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be return array of exclude paths with context', () => {\n      expect(excludePaths()).not.toBe(null);\n      expect(excludePaths()).toBeDefined();\n      expect(excludePaths()).toBeInstanceOf(Array);\n      expect(excludePaths()).toEqual([\n        `/v1/api-test/health/liveness`,\n        `/v1/api-test/health/readiness`,\n        `/v1/api-test/info`,\n      ]);\n    })",
                      "err": {},
                      "uuid": "90ac9833-eeae-476e-bfd7-bf7dd32c97ce",
                      "parentUUID": "12b62165-cb63-43eb-9b35-7073afb3ee2a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9f0466a1-998e-4576-80c8-501d85c584ac",
                    "90ac9833-eeae-476e-bfd7-bf7dd32c97ce"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 5,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                },
                {
                  "uuid": "f1c489e3-c6cf-495b-8b0c-5bcf34246375",
                  "title": "without env context",
                  "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/commons.spec.ts",
                  "file": "commons.spec.ts",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "fullTitle": "commons without env context should be return commons exclude paths without context",
                      "title": "should be return commons exclude paths without context",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be return commons exclude paths without context', () => {\n      expect(corePathsExcludes()).not.toBe(null);\n      expect(corePathsExcludes()).toBeDefined();\n      expect(corePathsExcludes()).toBeInstanceOf(Array);\n\n      expect(corePathsExcludes()).toContainObject({\n        path: '/health/liveness',\n        method: RequestMethod.GET,\n      });\n\n      expect(corePathsExcludes()).toContainObject({\n        path: '/health/readiness',\n        method: RequestMethod.GET,\n      });\n\n      expect(corePathsExcludes()).toContainObject({\n        path: '/info',\n        method: RequestMethod.GET,\n      });\n    })",
                      "err": {},
                      "uuid": "358e37f9-83aa-49a7-a5c2-2d58c13c1e58",
                      "parentUUID": "f1c489e3-c6cf-495b-8b0c-5bcf34246375",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "fullTitle": "commons without env context should be return array of exclude paths without context",
                      "title": "should be return array of exclude paths without context",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it('should be return array of exclude paths without context', () => {\n      expect(excludePaths()).not.toBe(null);\n      expect(excludePaths()).toBeDefined();\n      expect(excludePaths()).toBeInstanceOf(Array);\n      expect(excludePaths()).toEqual(['/health/liveness', '/health/readiness', '/info']);\n    })",
                      "err": {},
                      "uuid": "796638f9-e0cd-4b2c-a460-d7df6db756ab",
                      "parentUUID": "f1c489e3-c6cf-495b-8b0c-5bcf34246375",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "358e37f9-83aa-49a7-a5c2-2d58c13c1e58",
                    "796638f9-e0cd-4b2c-a460-d7df6db756ab"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 5000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "a6124b22-2f24-4645-bc73-de000d3ae279",
              "title": "Public decorator",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/public.decorator.spec.ts",
              "file": "public.decorator.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "fullTitle": "Public decorator should be defined",
                  "title": "should be defined",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be defined', async () => {\n    expect(Public()).toBeDefined();\n  })",
                  "err": {},
                  "uuid": "6328b923-e592-4ca8-937f-e2f46594860a",
                  "parentUUID": "a6124b22-2f24-4645-bc73-de000d3ae279",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "Public decorator should be return key",
                  "title": "should be return key",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return key', async () => {\n    expect(IS_PUBLIC_KEY).toBe('isPublic');\n  })",
                  "err": {},
                  "uuid": "b4e5b61b-46d2-4bb5-ad19-5ed1be71aa83",
                  "parentUUID": "a6124b22-2f24-4645-bc73-de000d3ae279",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6328b923-e592-4ca8-937f-e2f46594860a",
                "b4e5b61b-46d2-4bb5-ad19-5ed1be71aa83"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "5574423a-9056-4c82-b3a9-06784d76044d",
              "title": "https-certificate",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/https-certificate.spec.ts",
              "file": "https-certificate.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "fullTitle": "https-certificate should be return https certificate config",
                  "title": "should be return https certificate config",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return https certificate config', () => {\n    const crtPath = path.resolve(__dirname, './utils/localhost.crt');\n    const keyPath = path.resolve(__dirname, './utils/localhost.key');\n\n    const config = setHttpsOptions(crtPath, keyPath);\n    expect(typeof config).toBe('object');\n    expect(config).toBeDefined();\n    expect(config.cert).not.toEqual('');\n    expect(config.key).not.toEqual('');\n  })",
                  "err": {},
                  "uuid": "f4207a70-4051-4b29-9782-05fbcf2ea58b",
                  "parentUUID": "5574423a-9056-4c82-b3a9-06784d76044d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "https-certificate should be return https certificate config empty",
                  "title": "should be return https certificate config empty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return https certificate config empty', () => {\n    const crtPath = path.resolve(__dirname, './utils/my-localhost.crt');\n    const keyPath = path.resolve(__dirname, './utils/my-localhost.key');\n\n    const config = setHttpsOptions(crtPath, keyPath);\n    expect(typeof config).toBe('object');\n    expect(config).toBeDefined();\n    expect(config.cert).toEqual('');\n    expect(config.key).toEqual('');\n  })",
                  "err": {},
                  "uuid": "9fbfd5ea-ab70-41e4-851d-d7fb7f3acc16",
                  "parentUUID": "5574423a-9056-4c82-b3a9-06784d76044d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f4207a70-4051-4b29-9782-05fbcf2ea58b",
                "9fbfd5ea-ab70-41e4-851d-d7fb7f3acc16"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "6932e9bc-4e38-4c01-b8f5-d7047e1c888c",
              "title": "Public decorator",
              "fullFile": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/roles.decorator.spec.ts",
              "file": "roles.decorator.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "fullTitle": "Public decorator should be defined",
                  "title": "should be defined",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be defined', async () => {\n    expect(Roles('admin')).toBeDefined();\n    expect(Roles('admin', 'user')).toBeDefined();\n  })",
                  "err": {},
                  "uuid": "c314d44f-8164-4290-8acb-a3bccee4984c",
                  "parentUUID": "6932e9bc-4e38-4c01-b8f5-d7047e1c888c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "fullTitle": "Public decorator should be return key",
                  "title": "should be return key",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "it('should be return key', async () => {\n    expect(ROLES_KEY).toBe('roles');\n  })",
                  "err": {},
                  "uuid": "fb60b783-6e9d-412c-b6e4-dcfa158e1945",
                  "parentUUID": "6932e9bc-4e38-4c01-b8f5-d7047e1c888c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c314d44f-8164-4290-8acb-a3bccee4984c",
                "fb60b783-6e9d-412c-b6e4-dcfa158e1945"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ]
}