{
  "numFailedTestSuites": 0,
  "numFailedTests": 0,
  "numPassedTestSuites": 15,
  "numPassedTests": 104,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 15,
  "numTotalTests": 104,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1740768449241,
  "success": true,
  "testResults": [
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 19,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1740768456726,
        "runtime": 7445,
        "slow": true,
        "start": 1740768449281
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/filtering.decorator.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should return empty array if no filter query params are provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return empty array if no filter query params are provided"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should return the correct fields, rules, and values from query params",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the correct fields, rules, and values from query params"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should properly handle the filter rule EQUALS",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should properly handle the filter rule EQUALS"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should properly handle the filter rule NOT_EQUALS",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should properly handle the filter rule NOT_EQUALS"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should properly handle the filter rule GREATER_THAN",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should properly handle the filter rule GREATER_THAN"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should properly handle the filter rule GREATER_THAN_OR_EQUALS",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should properly handle the filter rule GREATER_THAN_OR_EQUALS"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should properly handle the filter rule LESS_THAN",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should properly handle the filter rule LESS_THAN"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should properly handle the filter rule LESS_THAN_OR_EQUALS",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should properly handle the filter rule LESS_THAN_OR_EQUALS"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should properly handle the filter rule LIKE",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should properly handle the filter rule LIKE"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should properly handle the filter rule NOT_LIKE",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should properly handle the filter rule NOT_LIKE"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should properly handle the filter rule IN",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should properly handle the filter rule IN"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should properly handle the filter rule NOT_IN",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should properly handle the filter rule NOT_IN"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should properly handle the filter rule IS_NULL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should properly handle the filter rule IS_NULL"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should properly handle the filter rule IS_NOT_NULL",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should properly handle the filter rule IS_NOT_NULL"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 13,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should throw BadRequestException if filter parameter format is invalid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequestException if filter parameter format is invalid"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should throw BadRequestException if property is not included in validProperties",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequestException if property is not included in validProperties"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should throw BadRequestException if validProperties is not an array",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequestException if validProperties is not an array"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should throw BadRequestException if filter parameter is in incorrect format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequestException if filter parameter is in incorrect format"
        },
        {
          "ancestorTitles": [
            "Filtering Decorator"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Decorator should throw BadRequestException if filter rule is not a valid FilterRule",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequestException if filter rule is not a valid FilterRule"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "@tresdoce-nestjs-toolkit/core"
      },
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1740768457998,
        "runtime": 1252,
        "slow": false,
        "start": 1740768456746
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/public.decorator.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Public decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Public decorator should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": [
            "Public decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Public decorator should be return key",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be return key"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "@tresdoce-nestjs-toolkit/core"
      },
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 5,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1740768459150,
        "runtime": 1130,
        "slow": false,
        "start": 1740768458020
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/commons.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "commons",
            "with env context"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "commons with env context should be return commons exclude paths with context",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should be return commons exclude paths with context"
        },
        {
          "ancestorTitles": [
            "commons",
            "with env context"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "commons with env context should be return array of exclude paths with context",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should be return array of exclude paths with context"
        },
        {
          "ancestorTitles": [
            "commons",
            "with env context"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "commons with env context should be return array of exclude paths with globs",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should be return array of exclude paths with globs"
        },
        {
          "ancestorTitles": [
            "commons",
            "without env context"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "commons without env context should be return commons exclude paths without context",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 7,
          "retryReasons": [],
          "status": "passed",
          "title": "should be return commons exclude paths without context"
        },
        {
          "ancestorTitles": [
            "commons",
            "without env context"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "commons without env context should be return array of exclude paths without context",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should be return array of exclude paths without context"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "@tresdoce-nestjs-toolkit/core"
      },
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1740768460215,
        "runtime": 1048,
        "slow": false,
        "start": 1740768459167
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/exclude.filter.decorator.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "ExcludeFilter decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ExcludeFilter decorator should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": [
            "ExcludeFilter decorator"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "ExcludeFilter decorator should be return key",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be return key"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "@tresdoce-nestjs-toolkit/core"
      },
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1740768461213,
        "runtime": 983,
        "slow": false,
        "start": 1740768460230
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/https-certificate.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "https-certificate"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "https-certificate should be return https certificate config",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should be return https certificate config"
        },
        {
          "ancestorTitles": [
            "https-certificate"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "https-certificate should be return https certificate config empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 4,
          "retryReasons": [],
          "status": "passed",
          "title": "should be return https certificate config empty"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "@tresdoce-nestjs-toolkit/core"
      },
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 2,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1740768462511,
        "runtime": 1275,
        "slow": false,
        "start": 1740768461236
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/roles.decorator.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Roles decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Roles decorator should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": [
            "Roles decorator"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Roles decorator should be return key",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be return key"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "@tresdoce-nestjs-toolkit/core"
      },
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1740768463633,
        "runtime": 1100,
        "slow": false,
        "start": 1740768462533
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/filtering.dto.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Filtering Dto",
            "FilteringCriteriaDto"
          ],
          "duration": 3,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Dto FilteringCriteriaDto should validate a valid FilteringCriteriaDto",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate a valid FilteringCriteriaDto"
        },
        {
          "ancestorTitles": [
            "Filtering Dto",
            "FilteringCriteriaDto"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Dto FilteringCriteriaDto should not validate an invalid FilteringCriteriaDto with invalid rule",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not validate an invalid FilteringCriteriaDto with invalid rule"
        },
        {
          "ancestorTitles": [
            "Filtering Dto",
            "FilteringCriteriaDto"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Dto FilteringCriteriaDto should validate a FilteringCriteriaDto with optional values for IS_NULL rule",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate a FilteringCriteriaDto with optional values for IS_NULL rule"
        },
        {
          "ancestorTitles": [
            "Filtering Dto",
            "FilteringParamsDto"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Dto FilteringParamsDto should validate a valid FilteringParamsDto",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate a valid FilteringParamsDto"
        },
        {
          "ancestorTitles": [
            "Filtering Dto",
            "FilteringParamsDto"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Dto FilteringParamsDto should not validate an invalid FilteringParamsDto with invalid rule",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not validate an invalid FilteringParamsDto with invalid rule"
        },
        {
          "ancestorTitles": [
            "Filtering Dto",
            "FilteringParamsDto"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Filtering Dto FilteringParamsDto should validate an empty filters array",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate an empty filters array"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "@tresdoce-nestjs-toolkit/core"
      },
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1740768464612,
        "runtime": 964,
        "slow": false,
        "start": 1740768463648
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/sorting.decorator.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Sorting Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Sorting Decorator should return empty array if no sort query params are provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return empty array if no sort query params are provided"
        },
        {
          "ancestorTitles": [
            "Sorting Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Sorting Decorator should return the correct fields and order from query params",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the correct fields and order from query params"
        },
        {
          "ancestorTitles": [
            "Sorting Decorator"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Sorting Decorator should throw BadRequestException if sort parameter format is invalid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequestException if sort parameter format is invalid"
        },
        {
          "ancestorTitles": [
            "Sorting Decorator"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Sorting Decorator should throw BadRequestException if field is not included in validParams",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequestException if field is not included in validParams"
        },
        {
          "ancestorTitles": [
            "Sorting Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Sorting Decorator should throw BadRequestException if validParams is not an array",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequestException if validParams is not an array"
        },
        {
          "ancestorTitles": [
            "Sorting Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Sorting Decorator should throw BadRequestException if sort parameter is in incorrect format",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequestException if sort parameter is in incorrect format"
        },
        {
          "ancestorTitles": [
            "Sorting Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Sorting Decorator should throw BadRequestException if sort direction is not \"asc\" or \"desc\"",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequestException if sort direction is not \"asc\" or \"desc\""
        }
      ],
      "displayName": {
        "color": "white",
        "name": "@tresdoce-nestjs-toolkit/core"
      },
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 7,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1740768465604,
        "runtime": 976,
        "slow": false,
        "start": 1740768464628
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/pagination.decorator.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Pagination Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Pagination Decorator should return default page and size if no query params are provided",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should return default page and size if no query params are provided"
        },
        {
          "ancestorTitles": [
            "Pagination Decorator"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Pagination Decorator should return the correct page and size from query params",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should return the correct page and size from query params"
        },
        {
          "ancestorTitles": [
            "Pagination Decorator"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Pagination Decorator should throw BadRequestException if page is not a positive integer",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequestException if page is not a positive integer"
        },
        {
          "ancestorTitles": [
            "Pagination Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Pagination Decorator should throw BadRequestException if size is not a positive integer",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequestException if size is not a positive integer"
        },
        {
          "ancestorTitles": [
            "Pagination Decorator"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Pagination Decorator should throw BadRequestException if page is a string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequestException if page is a string"
        },
        {
          "ancestorTitles": [
            "Pagination Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Pagination Decorator should throw BadRequestException if size is a string",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequestException if size is a string"
        },
        {
          "ancestorTitles": [
            "Pagination Decorator"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Pagination Decorator should throw BadRequestException if size exceeds the maximum value",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw BadRequestException if size exceeds the maximum value"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "@tresdoce-nestjs-toolkit/core"
      },
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 4,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1740768466596,
        "runtime": 975,
        "slow": false,
        "start": 1740768465621
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/pagination.dto.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "PaginationParamsDto"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PaginationParamsDto should validate a valid DTO",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate a valid DTO"
        },
        {
          "ancestorTitles": [
            "PaginationParamsDto"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PaginationParamsDto should set default values for missing fields",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should set default values for missing fields"
        },
        {
          "ancestorTitles": [
            "PaginationParamsDto"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PaginationParamsDto should not validate an invalid DTO",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should not validate an invalid DTO"
        },
        {
          "ancestorTitles": [
            "PaginationParamsDto"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "PaginationParamsDto should not validate when page is undefined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not validate when page is undefined"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "@tresdoce-nestjs-toolkit/core"
      },
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 6,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1740768467595,
        "runtime": 985,
        "slow": false,
        "start": 1740768466610
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/sorting.dto.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Sorting Dto",
            "SortCriteriaDto"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Sorting Dto SortCriteriaDto should validate a valid SortCriteriaDto",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate a valid SortCriteriaDto"
        },
        {
          "ancestorTitles": [
            "Sorting Dto",
            "SortCriteriaDto"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Sorting Dto SortCriteriaDto should not validate an invalid SortCriteriaDto",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should not validate an invalid SortCriteriaDto"
        },
        {
          "ancestorTitles": [
            "Sorting Dto",
            "SortCriteriaDto"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Sorting Dto SortCriteriaDto should set default order value if missing",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should set default order value if missing"
        },
        {
          "ancestorTitles": [
            "Sorting Dto",
            "SortingParamsDto"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Sorting Dto SortingParamsDto should validate a valid SortingParamsDto",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate a valid SortingParamsDto"
        },
        {
          "ancestorTitles": [
            "Sorting Dto",
            "SortingParamsDto"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Sorting Dto SortingParamsDto should not validate an invalid SortingParamsDto",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not validate an invalid SortingParamsDto"
        },
        {
          "ancestorTitles": [
            "Sorting Dto",
            "SortingParamsDto"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Sorting Dto SortingParamsDto should validate an empty fields array",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate an empty fields array"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "@tresdoce-nestjs-toolkit/core"
      },
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 10,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1740768468533,
        "runtime": 919,
        "slow": false,
        "start": 1740768467614
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/csrf.guard.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "CsrfGuard"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfGuard should be defined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should be defined"
        },
        {
          "ancestorTitles": [
            "CsrfGuard"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfGuard should throw an exception if CSRF token is not found",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an exception if CSRF token is not found"
        },
        {
          "ancestorTitles": [
            "CsrfGuard"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfGuard should throw an exception if CSRF token is invalid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an exception if CSRF token is invalid"
        },
        {
          "ancestorTitles": [
            "CsrfGuard"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfGuard should throw an exception if CSRF token is invalid device",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an exception if CSRF token is invalid device"
        },
        {
          "ancestorTitles": [
            "CsrfGuard"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfGuard should throw an exception if CSRF token is invalid IP device",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an exception if CSRF token is invalid IP device"
        },
        {
          "ancestorTitles": [
            "CsrfGuard"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfGuard should allow access if CSRF token is valid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow access if CSRF token is valid"
        },
        {
          "ancestorTitles": [
            "CsrfGuard"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfGuard should throw an exception if CSRF token is only found in body but is invalid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an exception if CSRF token is only found in body but is invalid"
        },
        {
          "ancestorTitles": [
            "CsrfGuard"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfGuard should throw an exception if CSRF token is only found in query but is invalid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an exception if CSRF token is only found in query but is invalid"
        },
        {
          "ancestorTitles": [
            "CsrfGuard"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfGuard should throw an exception if CSRF token is only found in cookie but is invalid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an exception if CSRF token is only found in cookie but is invalid"
        },
        {
          "ancestorTitles": [
            "CsrfGuard"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfGuard should throw an exception if CSRF token is only found in signed cookie but is invalid",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an exception if CSRF token is only found in signed cookie but is invalid"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "@tresdoce-nestjs-toolkit/core"
      },
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 15,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1740768469437,
        "runtime": 894,
        "slow": false,
        "start": 1740768468543
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/csrf-token.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "CsrfToken"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfToken should set a CSRF token with default options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 3,
          "retryReasons": [],
          "status": "passed",
          "title": "should set a CSRF token with default options"
        },
        {
          "ancestorTitles": [
            "CsrfToken"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfToken should use custom options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use custom options"
        },
        {
          "ancestorTitles": [
            "CsrfToken"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfToken should use custom options and signed",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use custom options and signed"
        },
        {
          "ancestorTitles": [
            "CsrfToken"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfToken should set the correct cookie options",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should set the correct cookie options"
        },
        {
          "ancestorTitles": [
            "CsrfToken"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfToken should convert an existing Set-Cookie header string to an array and append the new CSRF token using csrfToken middleware",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should convert an existing Set-Cookie header string to an array and append the new CSRF token using csrfToken middleware"
        },
        {
          "ancestorTitles": [
            "CsrfToken"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfToken should generate a new token if none is present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate a new token if none is present"
        },
        {
          "ancestorTitles": [
            "CsrfToken"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfToken should use the same token if already present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use the same token if already present"
        },
        {
          "ancestorTitles": [
            "CsrfToken"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfToken should generate a new secret if none is present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should generate a new secret if none is present"
        },
        {
          "ancestorTitles": [
            "CsrfToken"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfToken should use the same secret if already present",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should use the same secret if already present"
        },
        {
          "ancestorTitles": [
            "CsrfToken"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfToken should verify a valid token",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should verify a valid token"
        },
        {
          "ancestorTitles": [
            "CsrfToken"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfToken should not verify an invalid token using verify function",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not verify an invalid token using verify function"
        },
        {
          "ancestorTitles": [
            "CsrfToken"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfToken should not verify an invalid token using tokenProvider directly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should not verify an invalid token using tokenProvider directly"
        },
        {
          "ancestorTitles": [
            "CsrfToken"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfToken should get CSRF token from cookies",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should get CSRF token from cookies"
        },
        {
          "ancestorTitles": [
            "CsrfToken"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfToken should get CSRF token from signed cookies",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should get CSRF token from signed cookies"
        },
        {
          "ancestorTitles": [
            "CsrfToken"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "CsrfToken should return undefined if CSRF token is not found in any source",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return undefined if CSRF token is not found in any source"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "@tresdoce-nestjs-toolkit/core"
      },
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 9,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1740768470340,
        "runtime": 895,
        "slow": false,
        "start": 1740768469445
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/app.config.schema.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "appConfigValidationSchema",
            "validateSchema for apps"
          ],
          "duration": 2,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "appConfigValidationSchema validateSchema for apps should validate the base schema correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate the base schema correctly"
        },
        {
          "ancestorTitles": [
            "appConfigValidationSchema",
            "validateSchema for apps"
          ],
          "duration": 7,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "appConfigValidationSchema validateSchema for apps should throw an error for invalid APP_STAGE value in base schema",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error for invalid APP_STAGE value in base schema"
        },
        {
          "ancestorTitles": [
            "appConfigValidationSchema",
            "validateSchema for apps"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "appConfigValidationSchema validateSchema for apps should throw an error for invalid SKIP_HEALTH_CHECKS value in base schema",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error for invalid SKIP_HEALTH_CHECKS value in base schema"
        },
        {
          "ancestorTitles": [
            "appConfigValidationSchema",
            "validateSchema for apps"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "appConfigValidationSchema validateSchema for apps should validate the base schema with a new input correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate the base schema with a new input correctly"
        },
        {
          "ancestorTitles": [
            "appConfigValidationSchema",
            "validateSchema for apps"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "appConfigValidationSchema validateSchema for apps should throw an error for invalid input in the base schema",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error for invalid input in the base schema"
        },
        {
          "ancestorTitles": [
            "appConfigValidationSchema",
            "validateSchema for apps"
          ],
          "duration": 5,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "appConfigValidationSchema validateSchema for apps should validate CSRF_SECRET correctly in prod stage",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate CSRF_SECRET correctly in prod stage"
        },
        {
          "ancestorTitles": [
            "appConfigValidationSchema",
            "validateSchema for apps"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "appConfigValidationSchema validateSchema for apps should throw an error for invalid CSRF_SECRET in prod stage",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should throw an error for invalid CSRF_SECRET in prod stage"
        },
        {
          "ancestorTitles": [
            "appConfigValidationSchema",
            "validateSchema for apps"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "appConfigValidationSchema validateSchema for apps should allow optional CSRF_SECRET in non-prod stages",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should allow optional CSRF_SECRET in non-prod stages"
        },
        {
          "ancestorTitles": [
            "appConfigValidationSchema",
            "validateSchemaForApp"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "appConfigValidationSchema validateSchemaForApp should validate the schema for app correctly",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 2,
          "retryReasons": [],
          "status": "passed",
          "title": "should validate the schema for app correctly"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "@tresdoce-nestjs-toolkit/core"
      },
      "failureMessage": null
    },
    {
      "leaks": false,
      "numFailingTests": 0,
      "numPassingTests": 8,
      "numPendingTests": 0,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1740768471132,
        "runtime": 788,
        "slow": false,
        "start": 1740768470344
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "uncheckedKeys": [],
        "unmatched": 0,
        "updated": 0
      },
      "testFilePath": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/__test__/utils.spec.ts",
      "testResults": [
        {
          "ancestorTitles": [
            "Utils",
            "getSkipHealthChecks"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Utils getSkipHealthChecks should return an array of values when _value is not empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return an array of values when _value is not empty"
        },
        {
          "ancestorTitles": [
            "Utils",
            "getSkipHealthChecks"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Utils getSkipHealthChecks should handle spaces and different cases",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should handle spaces and different cases"
        },
        {
          "ancestorTitles": [
            "Utils",
            "getSkipHealthChecks"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Utils getSkipHealthChecks should return an empty array when _value is empty",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return an empty array when _value is empty"
        },
        {
          "ancestorTitles": [
            "Utils",
            "getSkipHealthChecks"
          ],
          "duration": 0,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Utils getSkipHealthChecks should return an empty array when _value is undefined",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 1,
          "retryReasons": [],
          "status": "passed",
          "title": "should return an empty array when _value is undefined"
        },
        {
          "ancestorTitles": [
            "Utils",
            "calculatePagination"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Utils calculatePagination should calculate pagination metadata when there is a next and previous page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should calculate pagination metadata when there is a next and previous page"
        },
        {
          "ancestorTitles": [
            "Utils",
            "calculatePagination"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Utils calculatePagination should calculate pagination metadata when there is no next page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should calculate pagination metadata when there is no next page"
        },
        {
          "ancestorTitles": [
            "Utils",
            "calculatePagination"
          ],
          "duration": 1,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Utils calculatePagination should calculate pagination metadata when there is no previous page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should calculate pagination metadata when there is no previous page"
        },
        {
          "ancestorTitles": [
            "Utils",
            "calculatePagination"
          ],
          "duration": 4,
          "failureDetails": [],
          "failureMessages": [],
          "fullName": "Utils calculatePagination should calculate pagination metadata when there is only one page",
          "invocations": 1,
          "location": null,
          "numPassingAsserts": 6,
          "retryReasons": [],
          "status": "passed",
          "title": "should calculate pagination metadata when there is only one page"
        }
      ],
      "displayName": {
        "color": "white",
        "name": "@tresdoce-nestjs-toolkit/core"
      },
      "failureMessage": null
    }
  ],
  "wasInterrupted": false,
  "coverageMap": {
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/index.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/index.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 35
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 34
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 43
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 29
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 33
          }
        },
        "5": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 39
          }
        },
        "6": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 36
          }
        },
        "7": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": 38
          }
        },
        "8": {
          "start": {
            "line": 9,
            "column": 0
          },
          "end": {
            "line": 9,
            "column": 33
          }
        }
      },
      "fnMap": {},
      "branchMap": {},
      "s": {
        "0": 11,
        "1": 11,
        "2": 11,
        "3": 11,
        "4": 11,
        "5": 11,
        "6": 11,
        "7": 11,
        "8": 11
      },
      "f": {},
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/public.decorator.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/public.decorator.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 62
          }
        },
        "1": {
          "start": {
            "line": 3,
            "column": 13
          },
          "end": {
            "line": 3,
            "column": 40
          }
        },
        "2": {
          "start": {
            "line": 4,
            "column": 22
          },
          "end": {
            "line": 4,
            "column": 77
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 45
          },
          "end": {
            "line": 4,
            "column": 77
          }
        },
        "4": {
          "start": {
            "line": 4,
            "column": 13
          },
          "end": {
            "line": 4,
            "column": 22
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": {
            "start": {
              "line": 4,
              "column": 22
            },
            "end": {
              "line": 4,
              "column": 42
            }
          },
          "loc": {
            "start": {
              "line": 4,
              "column": 45
            },
            "end": {
              "line": 4,
              "column": 77
            }
          }
        }
      },
      "branchMap": {},
      "s": {
        "0": 11,
        "1": 11,
        "2": 11,
        "3": 1,
        "4": 11
      },
      "f": {
        "0": 1
      },
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/roles.decorator.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/roles.decorator.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 62
          }
        },
        "1": {
          "start": {
            "line": 3,
            "column": 13
          },
          "end": {
            "line": 3,
            "column": 33
          }
        },
        "2": {
          "start": {
            "line": 4,
            "column": 21
          },
          "end": {
            "line": 4,
            "column": 91
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 62
          },
          "end": {
            "line": 4,
            "column": 91
          }
        },
        "4": {
          "start": {
            "line": 4,
            "column": 13
          },
          "end": {
            "line": 4,
            "column": 21
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": {
            "start": {
              "line": 4,
              "column": 21
            },
            "end": {
              "line": 4,
              "column": 22
            }
          },
          "loc": {
            "start": {
              "line": 4,
              "column": 62
            },
            "end": {
              "line": 4,
              "column": 91
            }
          }
        }
      },
      "branchMap": {},
      "s": {
        "0": 11,
        "1": 11,
        "2": 11,
        "3": 2,
        "4": 11
      },
      "f": {
        "0": 2
      },
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/exclude.filter.decorator.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/exclude.filter.decorator.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 62
          }
        },
        "1": {
          "start": {
            "line": 3,
            "column": 13
          },
          "end": {
            "line": 3,
            "column": 50
          }
        },
        "2": {
          "start": {
            "line": 4,
            "column": 29
          },
          "end": {
            "line": 4,
            "column": 89
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 52
          },
          "end": {
            "line": 4,
            "column": 89
          }
        },
        "4": {
          "start": {
            "line": 4,
            "column": 13
          },
          "end": {
            "line": 4,
            "column": 29
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": {
            "start": {
              "line": 4,
              "column": 29
            },
            "end": {
              "line": 4,
              "column": 49
            }
          },
          "loc": {
            "start": {
              "line": 4,
              "column": 52
            },
            "end": {
              "line": 4,
              "column": 89
            }
          }
        }
      },
      "branchMap": {},
      "s": {
        "0": 11,
        "1": 11,
        "2": 11,
        "3": 1,
        "4": 11
      },
      "f": {
        "0": 1
      },
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/dtos/index.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/dtos/index.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 33
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 36
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 30
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 41
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 32
          }
        }
      },
      "fnMap": {},
      "branchMap": {},
      "s": {
        "0": 11,
        "1": 11,
        "2": 11,
        "3": 11,
        "4": 11
      },
      "f": {},
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/dtos/pagination.dto.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/dtos/pagination.dto.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 46
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 49
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 77
          }
        },
        "3": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 88
          }
        },
        "4": {
          "start": {
            "line": 20,
            "column": 2
          },
          "end": {
            "line": 20,
            "column": 30
          }
        },
        "5": {
          "start": {
            "line": 38,
            "column": 2
          },
          "end": {
            "line": 38,
            "column": 30
          }
        },
        "6": {
          "start": {
            "line": 6,
            "column": 0
          },
          "end": {
            "line": 6,
            "column": 13
          }
        },
        "7": {
          "start": {
            "line": 20,
            "column": 2
          },
          "end": {
            "line": 20,
            "column": null
          }
        },
        "8": {
          "start": {
            "line": 8,
            "column": 14
          },
          "end": {
            "line": 8,
            "column": 20
          }
        },
        "9": {
          "start": {
            "line": 38,
            "column": 2
          },
          "end": {
            "line": 38,
            "column": null
          }
        },
        "10": {
          "start": {
            "line": 23,
            "column": 14
          },
          "end": {
            "line": 23,
            "column": 20
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_2)",
          "decl": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 6,
              "column": 13
            }
          },
          "loc": {
            "start": {
              "line": 6,
              "column": 0
            },
            "end": {
              "line": 39,
              "column": 1
            }
          }
        },
        "1": {
          "name": "(anonymous_3)",
          "decl": {
            "start": {
              "line": 8,
              "column": 8
            },
            "end": {
              "line": 8,
              "column": 11
            }
          },
          "loc": {
            "start": {
              "line": 8,
              "column": 14
            },
            "end": {
              "line": 8,
              "column": 20
            }
          }
        },
        "2": {
          "name": "(anonymous_4)",
          "decl": {
            "start": {
              "line": 23,
              "column": 8
            },
            "end": {
              "line": 23,
              "column": 11
            }
          },
          "loc": {
            "start": {
              "line": 23,
              "column": 14
            },
            "end": {
              "line": 23,
              "column": 20
            }
          }
        }
      },
      "branchMap": {},
      "s": {
        "0": 11,
        "1": 11,
        "2": 11,
        "3": 11,
        "4": 4,
        "5": 4,
        "6": 11,
        "7": 11,
        "8": 2,
        "9": 11,
        "10": 3
      },
      "f": {
        "0": 4,
        "1": 2,
        "2": 3
      },
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/constants/pagination.constant.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/constants/pagination.constant.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 13
          },
          "end": {
            "line": 1,
            "column": 38
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 13
          },
          "end": {
            "line": 2,
            "column": 39
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 13
          },
          "end": {
            "line": 3,
            "column": 36
          }
        }
      },
      "fnMap": {},
      "branchMap": {},
      "s": {
        "0": 11,
        "1": 11,
        "2": 11
      },
      "f": {},
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/dtos/sort-criteria.dto.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/dtos/sort-criteria.dto.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 46
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 57
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 71
          }
        },
        "3": {
          "start": {
            "line": 16,
            "column": 2
          },
          "end": {
            "line": 16,
            "column": 49
          }
        },
        "4": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 13
          }
        },
        "5": {
          "start": {
            "line": 8,
            "column": 2
          },
          "end": {
            "line": 8,
            "column": null
          }
        },
        "6": {
          "start": {
            "line": 16,
            "column": 2
          },
          "end": {
            "line": 16,
            "column": null
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_2)",
          "decl": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 5,
              "column": 13
            }
          },
          "loc": {
            "start": {
              "line": 5,
              "column": 0
            },
            "end": {
              "line": 17,
              "column": 1
            }
          }
        }
      },
      "branchMap": {},
      "s": {
        "0": 11,
        "1": 11,
        "2": 11,
        "3": 3,
        "4": 11,
        "5": 11,
        "6": 11
      },
      "f": {
        "0": 3
      },
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/constants/sorting.constant.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/constants/sorting.constant.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 13
          },
          "end": {
            "line": 1,
            "column": 44
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 13
          },
          "end": {
            "line": 2,
            "column": 53
          }
        }
      },
      "fnMap": {},
      "branchMap": {},
      "s": {
        "0": 11,
        "1": 11
      },
      "f": {},
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/dtos/sorting.dto.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/dtos/sorting.dto.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 46
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 51
          }
        },
        "2": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 13
          }
        },
        "3": {
          "start": {
            "line": 12,
            "column": 2
          },
          "end": {
            "line": 12,
            "column": null
          }
        }
      },
      "fnMap": {},
      "branchMap": {},
      "s": {
        "0": 11,
        "1": 11,
        "2": 11,
        "3": 11
      },
      "f": {},
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/dtos/filtering-criteria.dto.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/dtos/filtering-criteria.dto.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 46
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 80
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 52
          }
        },
        "3": {
          "start": {
            "line": 5,
            "column": 0
          },
          "end": {
            "line": 5,
            "column": 13
          }
        },
        "4": {
          "start": {
            "line": 8,
            "column": 2
          },
          "end": {
            "line": 8,
            "column": null
          }
        },
        "5": {
          "start": {
            "line": 16,
            "column": 2
          },
          "end": {
            "line": 16,
            "column": null
          }
        },
        "6": {
          "start": {
            "line": 26,
            "column": 2
          },
          "end": {
            "line": 26,
            "column": null
          }
        }
      },
      "fnMap": {},
      "branchMap": {},
      "s": {
        "0": 11,
        "1": 11,
        "2": 11,
        "3": 11,
        "4": 11,
        "5": 11,
        "6": 11
      },
      "f": {},
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/filtering.decorator.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/filtering.decorator.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 93
          }
        },
        "1": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 72
          }
        },
        "2": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 8,
            "column": null
          }
        },
        "3": {
          "start": {
            "line": 9,
            "column": 2
          },
          "end": {
            "line": 9,
            "column": null
          }
        },
        "4": {
          "start": {
            "line": 10,
            "column": 2
          },
          "end": {
            "line": 10,
            "column": null
          }
        },
        "5": {
          "start": {
            "line": 11,
            "column": 2
          },
          "end": {
            "line": 11,
            "column": null
          }
        },
        "6": {
          "start": {
            "line": 12,
            "column": 2
          },
          "end": {
            "line": 12,
            "column": null
          }
        },
        "7": {
          "start": {
            "line": 13,
            "column": 2
          },
          "end": {
            "line": 13,
            "column": null
          }
        },
        "8": {
          "start": {
            "line": 14,
            "column": 2
          },
          "end": {
            "line": 14,
            "column": null
          }
        },
        "9": {
          "start": {
            "line": 15,
            "column": 2
          },
          "end": {
            "line": 15,
            "column": null
          }
        },
        "10": {
          "start": {
            "line": 16,
            "column": 2
          },
          "end": {
            "line": 16,
            "column": null
          }
        },
        "11": {
          "start": {
            "line": 17,
            "column": 2
          },
          "end": {
            "line": 17,
            "column": null
          }
        },
        "12": {
          "start": {
            "line": 18,
            "column": 2
          },
          "end": {
            "line": 18,
            "column": null
          }
        },
        "13": {
          "start": {
            "line": 19,
            "column": 2
          },
          "end": {
            "line": 19,
            "column": null
          }
        },
        "14": {
          "start": {
            "line": 20,
            "column": 2
          },
          "end": {
            "line": 20,
            "column": null
          }
        },
        "15": {
          "start": {
            "line": 39,
            "column": 34
          },
          "end": {
            "line": 60,
            "column": 1
          }
        },
        "16": {
          "start": {
            "line": 39,
            "column": 13
          },
          "end": {
            "line": 39,
            "column": 34
          }
        },
        "17": {
          "start": {
            "line": 69,
            "column": 28
          },
          "end": {
            "line": 93,
            "column": 1
          }
        },
        "18": {
          "start": {
            "line": 70,
            "column": 28
          },
          "end": {
            "line": 70,
            "column": 30
          }
        },
        "19": {
          "start": {
            "line": 71,
            "column": 23
          },
          "end": {
            "line": 71,
            "column": 25
          }
        },
        "20": {
          "start": {
            "line": 72,
            "column": 27
          },
          "end": {
            "line": 72,
            "column": 32
          }
        },
        "21": {
          "start": {
            "line": 74,
            "column": 2
          },
          "end": {
            "line": 86,
            "column": 3
          }
        },
        "22": {
          "start": {
            "line": 75,
            "column": 4
          },
          "end": {
            "line": 83,
            "column": 5
          }
        },
        "23": {
          "start": {
            "line": 76,
            "column": 6
          },
          "end": {
            "line": 76,
            "column": 23
          }
        },
        "24": {
          "start": {
            "line": 77,
            "column": 11
          },
          "end": {
            "line": 83,
            "column": 5
          }
        },
        "25": {
          "start": {
            "line": 78,
            "column": 6
          },
          "end": {
            "line": 78,
            "column": 27
          }
        },
        "26": {
          "start": {
            "line": 79,
            "column": 6
          },
          "end": {
            "line": 79,
            "column": 18
          }
        },
        "27": {
          "start": {
            "line": 80,
            "column": 6
          },
          "end": {
            "line": 80,
            "column": 15
          }
        },
        "28": {
          "start": {
            "line": 81,
            "column": 11
          },
          "end": {
            "line": 83,
            "column": 5
          }
        },
        "29": {
          "start": {
            "line": 82,
            "column": 6
          },
          "end": {
            "line": 82,
            "column": 24
          }
        },
        "30": {
          "start": {
            "line": 85,
            "column": 4
          },
          "end": {
            "line": 85,
            "column": 19
          }
        },
        "31": {
          "start": {
            "line": 88,
            "column": 2
          },
          "end": {
            "line": 90,
            "column": 3
          }
        },
        "32": {
          "start": {
            "line": 89,
            "column": 4
          },
          "end": {
            "line": 89,
            "column": 25
          }
        },
        "33": {
          "start": {
            "line": 92,
            "column": 2
          },
          "end": {
            "line": 92,
            "column": 17
          }
        },
        "34": {
          "start": {
            "line": 69,
            "column": 13
          },
          "end": {
            "line": 69,
            "column": 28
          }
        },
        "35": {
          "start": {
            "line": 123,
            "column": 13
          },
          "end": {
            "line": 168,
            "column": 2
          }
        },
        "36": {
          "start": {
            "line": 125,
            "column": 29
          },
          "end": {
            "line": 125,
            "column": 69
          }
        },
        "37": {
          "start": {
            "line": 126,
            "column": 24
          },
          "end": {
            "line": 126,
            "column": 55
          }
        },
        "38": {
          "start": {
            "line": 127,
            "column": 4
          },
          "end": {
            "line": 127,
            "column": 32
          }
        },
        "39": {
          "start": {
            "line": 127,
            "column": 22
          },
          "end": {
            "line": 127,
            "column": 32
          }
        },
        "40": {
          "start": {
            "line": 129,
            "column": 4
          },
          "end": {
            "line": 131,
            "column": 5
          }
        },
        "41": {
          "start": {
            "line": 130,
            "column": 6
          },
          "end": {
            "line": 130,
            "column": 68
          }
        },
        "42": {
          "start": {
            "line": 133,
            "column": 20
          },
          "end": {
            "line": 133,
            "column": 45
          }
        },
        "43": {
          "start": {
            "line": 135,
            "column": 4
          },
          "end": {
            "line": 166,
            "column": 7
          }
        },
        "44": {
          "start": {
            "line": 136,
            "column": 26
          },
          "end": {
            "line": 136,
            "column": 50
          }
        },
        "45": {
          "start": {
            "line": 137,
            "column": 6
          },
          "end": {
            "line": 141,
            "column": 7
          }
        },
        "46": {
          "start": {
            "line": 138,
            "column": 8
          },
          "end": {
            "line": 140,
            "column": 10
          }
        },
        "47": {
          "start": {
            "line": 143,
            "column": 46
          },
          "end": {
            "line": 143,
            "column": 57
          }
        },
        "48": {
          "start": {
            "line": 144,
            "column": 6
          },
          "end": {
            "line": 146,
            "column": 7
          }
        },
        "49": {
          "start": {
            "line": 145,
            "column": 8
          },
          "end": {
            "line": 145,
            "column": 78
          }
        },
        "50": {
          "start": {
            "line": 153,
            "column": 26
          },
          "end": {
            "line": 153,
            "column": 28
          }
        },
        "51": {
          "start": {
            "line": 155,
            "column": 6
          },
          "end": {
            "line": 163,
            "column": 7
          }
        },
        "52": {
          "start": {
            "line": 156,
            "column": 8
          },
          "end": {
            "line": 162,
            "column": 9
          }
        },
        "53": {
          "start": {
            "line": 157,
            "column": 10
          },
          "end": {
            "line": 159,
            "column": 75
          }
        },
        "54": {
          "start": {
            "line": 159,
            "column": 28
          },
          "end": {
            "line": 159,
            "column": 73
          }
        },
        "55": {
          "start": {
            "line": 161,
            "column": 10
          },
          "end": {
            "line": 161,
            "column": 73
          }
        },
        "56": {
          "start": {
            "line": 165,
            "column": 6
          },
          "end": {
            "line": 165,
            "column": 99
          }
        },
        "57": {
          "start": {
            "line": 165,
            "column": 80
          },
          "end": {
            "line": 165,
            "column": 95
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": {
            "start": {
              "line": 8,
              "column": 0
            },
            "end": {
              "line": 8,
              "column": 12
            }
          },
          "loc": {
            "start": {
              "line": 8,
              "column": 22
            },
            "end": {
              "line": 21,
              "column": 1
            }
          }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 39,
              "column": 34
            },
            "end": {
              "line": 39,
              "column": 35
            }
          },
          "loc": {
            "start": {
              "line": 39,
              "column": 75
            },
            "end": {
              "line": 60,
              "column": 1
            }
          }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": {
            "start": {
              "line": 69,
              "column": 28
            },
            "end": {
              "line": 69,
              "column": 29
            }
          },
          "loc": {
            "start": {
              "line": 69,
              "column": 62
            },
            "end": {
              "line": 93,
              "column": 1
            }
          }
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": {
            "start": {
              "line": 124,
              "column": 2
            },
            "end": {
              "line": 124,
              "column": 3
            }
          },
          "loc": {
            "start": {
              "line": 124,
              "column": 73
            },
            "end": {
              "line": 167,
              "column": 3
            }
          }
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": {
            "start": {
              "line": 135,
              "column": 23
            },
            "end": {
              "line": 135,
              "column": 24
            }
          },
          "loc": {
            "start": {
              "line": 135,
              "column": 34
            },
            "end": {
              "line": 166,
              "column": 5
            }
          }
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": {
            "start": {
              "line": 159,
              "column": 17
            },
            "end": {
              "line": 159,
              "column": 18
            }
          },
          "loc": {
            "start": {
              "line": 159,
              "column": 28
            },
            "end": {
              "line": 159,
              "column": 73
            }
          }
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": {
            "start": {
              "line": 165,
              "column": 73
            },
            "end": {
              "line": 165,
              "column": 74
            }
          },
          "loc": {
            "start": {
              "line": 165,
              "column": 80
            },
            "end": {
              "line": 165,
              "column": 95
            }
          }
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 8,
              "column": 12
            },
            "end": {
              "line": 8,
              "column": null
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 8,
                "column": 12
              },
              "end": {
                "line": 8,
                "column": 22
              }
            },
            {
              "start": {
                "line": 8,
                "column": 22
              },
              "end": {
                "line": 8,
                "column": null
              }
            }
          ]
        },
        "1": {
          "loc": {
            "start": {
              "line": 75,
              "column": 4
            },
            "end": {
              "line": 83,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 75,
                "column": 4
              },
              "end": {
                "line": 83,
                "column": 5
              }
            },
            {
              "start": {
                "line": 77,
                "column": 11
              },
              "end": {
                "line": 83,
                "column": 5
              }
            }
          ]
        },
        "2": {
          "loc": {
            "start": {
              "line": 75,
              "column": 8
            },
            "end": {
              "line": 75,
              "column": 73
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 75,
                "column": 9
              },
              "end": {
                "line": 75,
                "column": 21
              }
            },
            {
              "start": {
                "line": 75,
                "column": 25
              },
              "end": {
                "line": 75,
                "column": 46
              }
            },
            {
              "start": {
                "line": 75,
                "column": 51
              },
              "end": {
                "line": 75,
                "column": 73
              }
            }
          ]
        },
        "3": {
          "loc": {
            "start": {
              "line": 77,
              "column": 11
            },
            "end": {
              "line": 83,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 77,
                "column": 11
              },
              "end": {
                "line": 83,
                "column": 5
              }
            },
            {
              "start": {
                "line": 81,
                "column": 11
              },
              "end": {
                "line": 83,
                "column": 5
              }
            }
          ]
        },
        "4": {
          "loc": {
            "start": {
              "line": 77,
              "column": 15
            },
            "end": {
              "line": 77,
              "column": 41
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 77,
                "column": 15
              },
              "end": {
                "line": 77,
                "column": 27
              }
            },
            {
              "start": {
                "line": 77,
                "column": 31
              },
              "end": {
                "line": 77,
                "column": 41
              }
            }
          ]
        },
        "5": {
          "loc": {
            "start": {
              "line": 81,
              "column": 11
            },
            "end": {
              "line": 83,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 81,
                "column": 11
              },
              "end": {
                "line": 83,
                "column": 5
              }
            }
          ]
        },
        "6": {
          "loc": {
            "start": {
              "line": 81,
              "column": 15
            },
            "end": {
              "line": 81,
              "column": 40
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 81,
                "column": 15
              },
              "end": {
                "line": 81,
                "column": 27
              }
            },
            {
              "start": {
                "line": 81,
                "column": 31
              },
              "end": {
                "line": 81,
                "column": 40
              }
            }
          ]
        },
        "7": {
          "loc": {
            "start": {
              "line": 88,
              "column": 2
            },
            "end": {
              "line": 90,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 88,
                "column": 2
              },
              "end": {
                "line": 90,
                "column": 3
              }
            }
          ]
        },
        "8": {
          "loc": {
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 127,
              "column": 32
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 127,
                "column": 4
              },
              "end": {
                "line": 127,
                "column": 32
              }
            }
          ]
        },
        "9": {
          "loc": {
            "start": {
              "line": 129,
              "column": 4
            },
            "end": {
              "line": 131,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 129,
                "column": 4
              },
              "end": {
                "line": 131,
                "column": 5
              }
            }
          ]
        },
        "10": {
          "loc": {
            "start": {
              "line": 137,
              "column": 6
            },
            "end": {
              "line": 141,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 137,
                "column": 6
              },
              "end": {
                "line": 141,
                "column": 7
              }
            }
          ]
        },
        "11": {
          "loc": {
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 146,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 144,
                "column": 6
              },
              "end": {
                "line": 146,
                "column": 7
              }
            }
          ]
        },
        "12": {
          "loc": {
            "start": {
              "line": 155,
              "column": 6
            },
            "end": {
              "line": 163,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 155,
                "column": 6
              },
              "end": {
                "line": 163,
                "column": 7
              }
            }
          ]
        },
        "13": {
          "loc": {
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 162,
              "column": 9
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 156,
                "column": 8
              },
              "end": {
                "line": 162,
                "column": 9
              }
            },
            {
              "start": {
                "line": 160,
                "column": 15
              },
              "end": {
                "line": 162,
                "column": 9
              }
            }
          ]
        },
        "14": {
          "loc": {
            "start": {
              "line": 156,
              "column": 12
            },
            "end": {
              "line": 156,
              "column": 64
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 156,
                "column": 12
              },
              "end": {
                "line": 156,
                "column": 34
              }
            },
            {
              "start": {
                "line": 156,
                "column": 38
              },
              "end": {
                "line": 156,
                "column": 64
              }
            }
          ]
        }
      },
      "s": {
        "0": 11,
        "1": 11,
        "2": 11,
        "3": 11,
        "4": 11,
        "5": 11,
        "6": 11,
        "7": 11,
        "8": 11,
        "9": 11,
        "10": 11,
        "11": 11,
        "12": 11,
        "13": 11,
        "14": 11,
        "15": 11,
        "16": 11,
        "17": 11,
        "18": 17,
        "19": 17,
        "20": 17,
        "21": 17,
        "22": 311,
        "23": 2,
        "24": 309,
        "25": 1,
        "26": 1,
        "27": 1,
        "28": 308,
        "29": 2,
        "30": 310,
        "31": 17,
        "32": 17,
        "33": 17,
        "34": 11,
        "35": 11,
        "36": 20,
        "37": 20,
        "38": 20,
        "39": 1,
        "40": 19,
        "41": 2,
        "42": 17,
        "43": 17,
        "44": 18,
        "45": 18,
        "46": 3,
        "47": 15,
        "48": 15,
        "49": 1,
        "50": 14,
        "51": 14,
        "52": 12,
        "53": 2,
        "54": 4,
        "55": 10,
        "56": 14,
        "57": 14
      },
      "f": {
        "0": 11,
        "1": 14,
        "2": 17,
        "3": 20,
        "4": 18,
        "5": 4,
        "6": 14
      },
      "b": {
        "0": [
          11,
          11
        ],
        "1": [
          2,
          309
        ],
        "2": [
          311,
          30,
          309
        ],
        "3": [
          1,
          308
        ],
        "4": [
          309,
          3
        ],
        "5": [
          2
        ],
        "6": [
          308,
          2
        ],
        "7": [
          17
        ],
        "8": [
          1
        ],
        "9": [
          2
        ],
        "10": [
          3
        ],
        "11": [
          1
        ],
        "12": [
          12
        ],
        "13": [
          2,
          10
        ],
        "14": [
          12,
          11
        ]
      }
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/constants/filtering.constant.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/constants/filtering.constant.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 13
          },
          "end": {
            "line": 1,
            "column": 91
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 13
          },
          "end": {
            "line": 2,
            "column": 88
          }
        }
      },
      "fnMap": {},
      "branchMap": {},
      "s": {
        "0": 11,
        "1": 11
      },
      "f": {},
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/dtos/filtering.dto.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/dtos/filtering.dto.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 46
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 51
          }
        },
        "2": {
          "start": {
            "line": 4,
            "column": 0
          },
          "end": {
            "line": 4,
            "column": 13
          }
        },
        "3": {
          "start": {
            "line": 12,
            "column": 2
          },
          "end": {
            "line": 12,
            "column": null
          }
        }
      },
      "fnMap": {},
      "branchMap": {},
      "s": {
        "0": 11,
        "1": 11,
        "2": 11,
        "3": 11
      },
      "f": {},
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/entities/index.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/entities/index.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 36
          }
        }
      },
      "fnMap": {},
      "branchMap": {},
      "s": {
        "0": 11
      },
      "f": {},
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/entities/pagination.entity.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/entities/pagination.entity.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 46
          }
        },
        "1": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 13
          }
        },
        "2": {
          "start": {
            "line": 9,
            "column": 2
          },
          "end": {
            "line": 9,
            "column": null
          }
        },
        "3": {
          "start": {
            "line": 16,
            "column": 2
          },
          "end": {
            "line": 16,
            "column": null
          }
        },
        "4": {
          "start": {
            "line": 23,
            "column": 2
          },
          "end": {
            "line": 23,
            "column": null
          }
        },
        "5": {
          "start": {
            "line": 30,
            "column": 2
          },
          "end": {
            "line": 30,
            "column": null
          }
        },
        "6": {
          "start": {
            "line": 37,
            "column": 2
          },
          "end": {
            "line": 37,
            "column": null
          }
        },
        "7": {
          "start": {
            "line": 44,
            "column": 2
          },
          "end": {
            "line": 44,
            "column": null
          }
        },
        "8": {
          "start": {
            "line": 47,
            "column": 0
          },
          "end": {
            "line": 47,
            "column": 13
          }
        },
        "9": {
          "start": {
            "line": 52,
            "column": 2
          },
          "end": {
            "line": 52,
            "column": null
          }
        },
        "10": {
          "start": {
            "line": 58,
            "column": 2
          },
          "end": {
            "line": 58,
            "column": null
          }
        }
      },
      "fnMap": {},
      "branchMap": {},
      "s": {
        "0": 11,
        "1": 11,
        "2": 11,
        "3": 11,
        "4": 11,
        "5": 11,
        "6": 11,
        "7": 11,
        "8": 11,
        "9": 11,
        "10": 11
      },
      "f": {},
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/pagination.decorator.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/pagination.decorator.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 93
          }
        },
        "1": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 87
          }
        },
        "2": {
          "start": {
            "line": 51,
            "column": 13
          },
          "end": {
            "line": 82,
            "column": 2
          }
        },
        "3": {
          "start": {
            "line": 53,
            "column": 39
          },
          "end": {
            "line": 53,
            "column": 57
          }
        },
        "4": {
          "start": {
            "line": 54,
            "column": 29
          },
          "end": {
            "line": 54,
            "column": 58
          }
        },
        "5": {
          "start": {
            "line": 56,
            "column": 23
          },
          "end": {
            "line": 56,
            "column": 49
          }
        },
        "6": {
          "start": {
            "line": 57,
            "column": 23
          },
          "end": {
            "line": 57,
            "column": 49
          }
        },
        "7": {
          "start": {
            "line": 59,
            "column": 4
          },
          "end": {
            "line": 63,
            "column": 5
          }
        },
        "8": {
          "start": {
            "line": 60,
            "column": 6
          },
          "end": {
            "line": 62,
            "column": 8
          }
        },
        "9": {
          "start": {
            "line": 65,
            "column": 4
          },
          "end": {
            "line": 72,
            "column": 5
          }
        },
        "10": {
          "start": {
            "line": 69,
            "column": 6
          },
          "end": {
            "line": 71,
            "column": 8
          }
        },
        "11": {
          "start": {
            "line": 74,
            "column": 4
          },
          "end": {
            "line": 74,
            "column": 43
          }
        },
        "12": {
          "start": {
            "line": 75,
            "column": 4
          },
          "end": {
            "line": 75,
            "column": 63
          }
        },
        "13": {
          "start": {
            "line": 77,
            "column": 4
          },
          "end": {
            "line": 80,
            "column": 6
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": {
            "start": {
              "line": 52,
              "column": 2
            },
            "end": {
              "line": 52,
              "column": 3
            }
          },
          "loc": {
            "start": {
              "line": 52,
              "column": 61
            },
            "end": {
              "line": 81,
              "column": 3
            }
          }
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 59,
              "column": 4
            },
            "end": {
              "line": 63,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 59,
                "column": 4
              },
              "end": {
                "line": 63,
                "column": 5
              }
            }
          ]
        },
        "1": {
          "loc": {
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 59,
              "column": 81
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 59,
                "column": 8
              },
              "end": {
                "line": 59,
                "column": 40
              }
            },
            {
              "start": {
                "line": 59,
                "column": 45
              },
              "end": {
                "line": 59,
                "column": 68
              }
            },
            {
              "start": {
                "line": 59,
                "column": 72
              },
              "end": {
                "line": 59,
                "column": 80
              }
            }
          ]
        },
        "2": {
          "loc": {
            "start": {
              "line": 65,
              "column": 4
            },
            "end": {
              "line": 72,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 65,
                "column": 4
              },
              "end": {
                "line": 72,
                "column": 5
              }
            }
          ]
        },
        "3": {
          "loc": {
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 62
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 66,
                "column": 6
              },
              "end": {
                "line": 66,
                "column": 38
              }
            },
            {
              "start": {
                "line": 67,
                "column": 7
              },
              "end": {
                "line": 67,
                "column": 30
              }
            },
            {
              "start": {
                "line": 67,
                "column": 34
              },
              "end": {
                "line": 67,
                "column": 42
              }
            },
            {
              "start": {
                "line": 67,
                "column": 46
              },
              "end": {
                "line": 67,
                "column": 61
              }
            }
          ]
        },
        "4": {
          "loc": {
            "start": {
              "line": 74,
              "column": 11
            },
            "end": {
              "line": 74,
              "column": 42
            }
          },
          "type": "cond-expr",
          "locations": [
            {
              "start": {
                "line": 74,
                "column": 23
              },
              "end": {
                "line": 74,
                "column": 27
              }
            },
            {
              "start": {
                "line": 74,
                "column": 30
              },
              "end": {
                "line": 74,
                "column": 42
              }
            }
          ]
        },
        "5": {
          "loc": {
            "start": {
              "line": 75,
              "column": 11
            },
            "end": {
              "line": 75,
              "column": 62
            }
          },
          "type": "cond-expr",
          "locations": [
            {
              "start": {
                "line": 75,
                "column": 43
              },
              "end": {
                "line": 75,
                "column": 47
              }
            },
            {
              "start": {
                "line": 75,
                "column": 50
              },
              "end": {
                "line": 75,
                "column": 62
              }
            }
          ]
        },
        "6": {
          "loc": {
            "start": {
              "line": 75,
              "column": 11
            },
            "end": {
              "line": 75,
              "column": 40
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 75,
                "column": 11
              },
              "end": {
                "line": 75,
                "column": 20
              }
            },
            {
              "start": {
                "line": 75,
                "column": 24
              },
              "end": {
                "line": 75,
                "column": 40
              }
            }
          ]
        }
      },
      "s": {
        "0": 11,
        "1": 11,
        "2": 11,
        "3": 7,
        "4": 7,
        "5": 7,
        "6": 7,
        "7": 7,
        "8": 2,
        "9": 5,
        "10": 3,
        "11": 2,
        "12": 2,
        "13": 2
      },
      "f": {
        "0": 7
      },
      "b": {
        "0": [
          2
        ],
        "1": [
          7,
          6,
          5
        ],
        "2": [
          3
        ],
        "3": [
          5,
          4,
          3,
          2
        ],
        "4": [
          1,
          1
        ],
        "5": [
          1,
          1
        ],
        "6": [
          2,
          1
        ]
      }
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/sorting.decorator.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/sorting.decorator.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 93
          }
        },
        "1": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 83
          }
        },
        "2": {
          "start": {
            "line": 52,
            "column": 13
          },
          "end": {
            "line": 82,
            "column": 2
          }
        },
        "3": {
          "start": {
            "line": 54,
            "column": 29
          },
          "end": {
            "line": 54,
            "column": 69
          }
        },
        "4": {
          "start": {
            "line": 55,
            "column": 30
          },
          "end": {
            "line": 55,
            "column": 58
          }
        },
        "5": {
          "start": {
            "line": 57,
            "column": 4
          },
          "end": {
            "line": 59,
            "column": 5
          }
        },
        "6": {
          "start": {
            "line": 58,
            "column": 6
          },
          "end": {
            "line": 58,
            "column": 16
          }
        },
        "7": {
          "start": {
            "line": 61,
            "column": 4
          },
          "end": {
            "line": 63,
            "column": 5
          }
        },
        "8": {
          "start": {
            "line": 62,
            "column": 6
          },
          "end": {
            "line": 62,
            "column": 85
          }
        },
        "9": {
          "start": {
            "line": 65,
            "column": 4
          },
          "end": {
            "line": 80,
            "column": 7
          }
        },
        "10": {
          "start": {
            "line": 66,
            "column": 6
          },
          "end": {
            "line": 70,
            "column": 7
          }
        },
        "11": {
          "start": {
            "line": 67,
            "column": 8
          },
          "end": {
            "line": 69,
            "column": 10
          }
        },
        "12": {
          "start": {
            "line": 72,
            "column": 54
          },
          "end": {
            "line": 72,
            "column": 74
          }
        },
        "13": {
          "start": {
            "line": 73,
            "column": 6
          },
          "end": {
            "line": 77,
            "column": 7
          }
        },
        "14": {
          "start": {
            "line": 74,
            "column": 8
          },
          "end": {
            "line": 76,
            "column": 10
          }
        },
        "15": {
          "start": {
            "line": 79,
            "column": 6
          },
          "end": {
            "line": 79,
            "column": 50
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": {
            "start": {
              "line": 53,
              "column": 2
            },
            "end": {
              "line": 53,
              "column": 3
            }
          },
          "loc": {
            "start": {
              "line": 53,
              "column": 73
            },
            "end": {
              "line": 81,
              "column": 3
            }
          }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 65,
              "column": 36
            },
            "end": {
              "line": 65,
              "column": 37
            }
          },
          "loc": {
            "start": {
              "line": 65,
              "column": 50
            },
            "end": {
              "line": 80,
              "column": 5
            }
          }
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 59,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 57,
                "column": 4
              },
              "end": {
                "line": 59,
                "column": 5
              }
            }
          ]
        },
        "1": {
          "loc": {
            "start": {
              "line": 61,
              "column": 4
            },
            "end": {
              "line": 63,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 61,
                "column": 4
              },
              "end": {
                "line": 63,
                "column": 5
              }
            }
          ]
        },
        "2": {
          "loc": {
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 70,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 66,
                "column": 6
              },
              "end": {
                "line": 70,
                "column": 7
              }
            }
          ]
        },
        "3": {
          "loc": {
            "start": {
              "line": 72,
              "column": 20
            },
            "end": {
              "line": 72,
              "column": 50
            }
          },
          "type": "default-arg",
          "locations": [
            {
              "start": {
                "line": 72,
                "column": 28
              },
              "end": {
                "line": 72,
                "column": 50
              }
            }
          ]
        },
        "4": {
          "loc": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 73,
                "column": 6
              },
              "end": {
                "line": 77,
                "column": 7
              }
            }
          ]
        }
      },
      "s": {
        "0": 11,
        "1": 11,
        "2": 11,
        "3": 9,
        "4": 9,
        "5": 9,
        "6": 1,
        "7": 8,
        "8": 2,
        "9": 6,
        "10": 7,
        "11": 2,
        "12": 5,
        "13": 5,
        "14": 3,
        "15": 2
      },
      "f": {
        "0": 9,
        "1": 7
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          2
        ],
        "2": [
          2
        ],
        "3": [
          2
        ],
        "4": [
          3
        ]
      }
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/csrf.decorator.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/decorators/csrf.decorator.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 73
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 44
          }
        },
        "2": {
          "start": {
            "line": 21,
            "column": 13
          },
          "end": {
            "line": 21,
            "column": 20
          }
        }
      },
      "fnMap": {},
      "branchMap": {},
      "s": {
        "0": 11,
        "1": 11,
        "2": 11
      },
      "f": {},
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/guards/index.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/guards/index.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 29
          }
        }
      },
      "fnMap": {},
      "branchMap": {},
      "s": {
        "0": 11
      },
      "f": {},
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/guards/csrf.guard.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/guards/csrf.guard.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": null
          }
        },
        "1": {
          "start": {
            "line": 10,
            "column": 0
          },
          "end": {
            "line": 10,
            "column": null
          }
        },
        "2": {
          "start": {
            "line": 26,
            "column": 7
          },
          "end": {
            "line": 75,
            "column": null
          }
        },
        "3": {
          "start": {
            "line": 44,
            "column": 35
          },
          "end": {
            "line": 44,
            "column": 58
          }
        },
        "4": {
          "start": {
            "line": 45,
            "column": 34
          },
          "end": {
            "line": 45,
            "column": 64
          }
        },
        "5": {
          "start": {
            "line": 47,
            "column": 47
          },
          "end": {
            "line": 50,
            "column": null
          }
        },
        "6": {
          "start": {
            "line": 52,
            "column": 46
          },
          "end": {
            "line": 52,
            "column": 73
          }
        },
        "7": {
          "start": {
            "line": 53,
            "column": 31
          },
          "end": {
            "line": 53,
            "column": 56
          }
        },
        "8": {
          "start": {
            "line": 55,
            "column": 4
          },
          "end": {
            "line": 57,
            "column": 5
          }
        },
        "9": {
          "start": {
            "line": 56,
            "column": 6
          },
          "end": {
            "line": 56,
            "column": 76
          }
        },
        "10": {
          "start": {
            "line": 59,
            "column": 4
          },
          "end": {
            "line": 61,
            "column": 5
          }
        },
        "11": {
          "start": {
            "line": 60,
            "column": 6
          },
          "end": {
            "line": 60,
            "column": 70
          }
        },
        "12": {
          "start": {
            "line": 63,
            "column": 4
          },
          "end": {
            "line": 65,
            "column": 5
          }
        },
        "13": {
          "start": {
            "line": 64,
            "column": 6
          },
          "end": {
            "line": 64,
            "column": 73
          }
        },
        "14": {
          "start": {
            "line": 67,
            "column": 4
          },
          "end": {
            "line": 69,
            "column": 5
          }
        },
        "15": {
          "start": {
            "line": 68,
            "column": 6
          },
          "end": {
            "line": 68,
            "column": 74
          }
        },
        "16": {
          "start": {
            "line": 71,
            "column": 4
          },
          "end": {
            "line": 71,
            "column": 24
          }
        },
        "17": {
          "start": {
            "line": 73,
            "column": 4
          },
          "end": {
            "line": 73,
            "column": 16
          }
        },
        "18": {
          "start": {
            "line": 26,
            "column": 13
          },
          "end": {
            "line": 26,
            "column": 22
          }
        },
        "19": {
          "start": {
            "line": 26,
            "column": 13
          },
          "end": {
            "line": 75,
            "column": null
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 43,
              "column": 2
            },
            "end": {
              "line": 43,
              "column": 13
            }
          },
          "loc": {
            "start": {
              "line": 43,
              "column": 40
            },
            "end": {
              "line": 74,
              "column": 3
            }
          }
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 57,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 55,
                "column": 4
              },
              "end": {
                "line": 57,
                "column": 5
              }
            }
          ]
        },
        "1": {
          "loc": {
            "start": {
              "line": 55,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 25
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 55,
                "column": 8
              },
              "end": {
                "line": 55,
                "column": 15
              }
            },
            {
              "start": {
                "line": 55,
                "column": 19
              },
              "end": {
                "line": 55,
                "column": 25
              }
            }
          ]
        },
        "2": {
          "loc": {
            "start": {
              "line": 59,
              "column": 4
            },
            "end": {
              "line": 61,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 59,
                "column": 4
              },
              "end": {
                "line": 61,
                "column": 5
              }
            }
          ]
        },
        "3": {
          "loc": {
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 65,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 63,
                "column": 4
              },
              "end": {
                "line": 65,
                "column": 5
              }
            }
          ]
        },
        "4": {
          "loc": {
            "start": {
              "line": 67,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 67,
                "column": 4
              },
              "end": {
                "line": 69,
                "column": 5
              }
            }
          ]
        }
      },
      "s": {
        "0": 12,
        "1": 12,
        "2": 12,
        "3": 9,
        "4": 9,
        "5": 9,
        "6": 9,
        "7": 9,
        "8": 9,
        "9": 1,
        "10": 8,
        "11": 1,
        "12": 7,
        "13": 1,
        "14": 6,
        "15": 5,
        "16": 1,
        "17": 1,
        "18": 12,
        "19": 12
      },
      "f": {
        "0": 9
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          9,
          8
        ],
        "2": [
          1
        ],
        "3": [
          1
        ],
        "4": [
          5
        ]
      }
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/commons/csrf-token.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/commons/csrf-token.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 35
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 40
          }
        },
        "2": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 26
          }
        },
        "3": {
          "start": {
            "line": 31,
            "column": 30
          },
          "end": {
            "line": 34,
            "column": 2
          }
        },
        "4": {
          "start": {
            "line": 37,
            "column": 40
          },
          "end": {
            "line": 37,
            "column": 47
          }
        },
        "5": {
          "start": {
            "line": 39,
            "column": 41
          },
          "end": {
            "line": 39,
            "column": 53
          }
        },
        "6": {
          "start": {
            "line": 41,
            "column": 35
          },
          "end": {
            "line": 46,
            "column": 2
          }
        },
        "7": {
          "start": {
            "line": 48,
            "column": 49
          },
          "end": {
            "line": 58,
            "column": 2
          }
        },
        "8": {
          "start": {
            "line": 69,
            "column": 25
          },
          "end": {
            "line": 98,
            "column": 1
          }
        },
        "9": {
          "start": {
            "line": 72,
            "column": 42
          },
          "end": {
            "line": 75,
            "column": 4
          }
        },
        "10": {
          "start": {
            "line": 77,
            "column": 2
          },
          "end": {
            "line": 97,
            "column": 4
          }
        },
        "11": {
          "start": {
            "line": 79,
            "column": 33
          },
          "end": {
            "line": 79,
            "column": 90
          }
        },
        "12": {
          "start": {
            "line": 81,
            "column": 4
          },
          "end": {
            "line": 84,
            "column": 5
          }
        },
        "13": {
          "start": {
            "line": 82,
            "column": 6
          },
          "end": {
            "line": 82,
            "column": 33
          }
        },
        "14": {
          "start": {
            "line": 83,
            "column": 6
          },
          "end": {
            "line": 83,
            "column": 61
          }
        },
        "15": {
          "start": {
            "line": 86,
            "column": 4
          },
          "end": {
            "line": 86,
            "column": 54
          }
        },
        "16": {
          "start": {
            "line": 87,
            "column": 4
          },
          "end": {
            "line": 94,
            "column": 6
          }
        },
        "17": {
          "start": {
            "line": 88,
            "column": 6
          },
          "end": {
            "line": 92,
            "column": 7
          }
        },
        "18": {
          "start": {
            "line": 89,
            "column": 8
          },
          "end": {
            "line": 89,
            "column": 64
          }
        },
        "19": {
          "start": {
            "line": 90,
            "column": 8
          },
          "end": {
            "line": 90,
            "column": 78
          }
        },
        "20": {
          "start": {
            "line": 91,
            "column": 8
          },
          "end": {
            "line": 91,
            "column": 46
          }
        },
        "21": {
          "start": {
            "line": 93,
            "column": 6
          },
          "end": {
            "line": 93,
            "column": 28
          }
        },
        "22": {
          "start": {
            "line": 96,
            "column": 4
          },
          "end": {
            "line": 96,
            "column": 11
          }
        },
        "23": {
          "start": {
            "line": 69,
            "column": 13
          },
          "end": {
            "line": 69,
            "column": 25
          }
        },
        "24": {
          "start": {
            "line": 107,
            "column": 21
          },
          "end": {
            "line": 113,
            "column": 1
          }
        },
        "25": {
          "start": {
            "line": 108,
            "column": 25
          },
          "end": {
            "line": 108,
            "column": 51
          }
        },
        "26": {
          "start": {
            "line": 109,
            "column": 30
          },
          "end": {
            "line": 110,
            "column": null
          }
        },
        "27": {
          "start": {
            "line": 112,
            "column": 2
          },
          "end": {
            "line": 112,
            "column": 36
          }
        },
        "28": {
          "start": {
            "line": 121,
            "column": 33
          },
          "end": {
            "line": 126,
            "column": 1
          }
        },
        "29": {
          "start": {
            "line": 122,
            "column": 2
          },
          "end": {
            "line": 122,
            "column": 53
          }
        },
        "30": {
          "start": {
            "line": 122,
            "column": 15
          },
          "end": {
            "line": 122,
            "column": 53
          }
        },
        "31": {
          "start": {
            "line": 123,
            "column": 21
          },
          "end": {
            "line": 123,
            "column": 38
          }
        },
        "32": {
          "start": {
            "line": 124,
            "column": 27
          },
          "end": {
            "line": 124,
            "column": 87
          }
        },
        "33": {
          "start": {
            "line": 125,
            "column": 2
          },
          "end": {
            "line": 125,
            "column": 28
          }
        },
        "34": {
          "start": {
            "line": 121,
            "column": 13
          },
          "end": {
            "line": 121,
            "column": 33
          }
        },
        "35": {
          "start": {
            "line": 134,
            "column": 28
          },
          "end": {
            "line": 148,
            "column": 1
          }
        },
        "36": {
          "start": {
            "line": 140,
            "column": 2
          },
          "end": {
            "line": 145,
            "column": 3
          }
        },
        "37": {
          "start": {
            "line": 141,
            "column": 29
          },
          "end": {
            "line": 141,
            "column": 55
          }
        },
        "38": {
          "start": {
            "line": 142,
            "column": 4
          },
          "end": {
            "line": 144,
            "column": 5
          }
        },
        "39": {
          "start": {
            "line": 143,
            "column": 6
          },
          "end": {
            "line": 143,
            "column": 30
          }
        },
        "40": {
          "start": {
            "line": 134,
            "column": 13
          },
          "end": {
            "line": 134,
            "column": 28
          }
        },
        "41": {
          "start": {
            "line": 156,
            "column": 28
          },
          "end": {
            "line": 156,
            "column": 85
          }
        },
        "42": {
          "start": {
            "line": 156,
            "column": 54
          },
          "end": {
            "line": 156,
            "column": 85
          }
        },
        "43": {
          "start": {
            "line": 156,
            "column": 13
          },
          "end": {
            "line": 156,
            "column": 28
          }
        },
        "44": {
          "start": {
            "line": 167,
            "column": 36
          },
          "end": {
            "line": 178,
            "column": 1
          }
        },
        "45": {
          "start": {
            "line": 172,
            "column": 50
          },
          "end": {
            "line": 172,
            "column": 75
          }
        },
        "46": {
          "start": {
            "line": 173,
            "column": 22
          },
          "end": {
            "line": 173,
            "column": 26
          }
        },
        "47": {
          "start": {
            "line": 174,
            "column": 2
          },
          "end": {
            "line": 176,
            "column": 3
          }
        },
        "48": {
          "start": {
            "line": 175,
            "column": 4
          },
          "end": {
            "line": 175,
            "column": 17
          }
        },
        "49": {
          "start": {
            "line": 177,
            "column": 2
          },
          "end": {
            "line": 177,
            "column": 18
          }
        },
        "50": {
          "start": {
            "line": 167,
            "column": 13
          },
          "end": {
            "line": 167,
            "column": 36
          }
        },
        "51": {
          "start": {
            "line": 186,
            "column": 34
          },
          "end": {
            "line": 187,
            "column": 74
          }
        },
        "52": {
          "start": {
            "line": 187,
            "column": 2
          },
          "end": {
            "line": 187,
            "column": 74
          }
        },
        "53": {
          "start": {
            "line": 186,
            "column": 13
          },
          "end": {
            "line": 186,
            "column": 34
          }
        },
        "54": {
          "start": {
            "line": 197,
            "column": 22
          },
          "end": {
            "line": 198,
            "column": 37
          }
        },
        "55": {
          "start": {
            "line": 198,
            "column": 2
          },
          "end": {
            "line": 198,
            "column": 37
          }
        },
        "56": {
          "start": {
            "line": 197,
            "column": 13
          },
          "end": {
            "line": 197,
            "column": 22
          }
        },
        "57": {
          "start": {
            "line": 208,
            "column": 18
          },
          "end": {
            "line": 213,
            "column": 1
          }
        },
        "58": {
          "start": {
            "line": 209,
            "column": 2
          },
          "end": {
            "line": 211,
            "column": 3
          }
        },
        "59": {
          "start": {
            "line": 210,
            "column": 4
          },
          "end": {
            "line": 210,
            "column": 46
          }
        },
        "60": {
          "start": {
            "line": 212,
            "column": 2
          },
          "end": {
            "line": 212,
            "column": 38
          }
        },
        "61": {
          "start": {
            "line": 223,
            "column": 18
          },
          "end": {
            "line": 240,
            "column": 1
          }
        },
        "62": {
          "start": {
            "line": 229,
            "column": 35
          },
          "end": {
            "line": 229,
            "column": 66
          }
        },
        "63": {
          "start": {
            "line": 230,
            "column": 52
          },
          "end": {
            "line": 230,
            "column": 85
          }
        },
        "64": {
          "start": {
            "line": 232,
            "column": 30
          },
          "end": {
            "line": 232,
            "column": 32
          }
        },
        "65": {
          "start": {
            "line": 233,
            "column": 2
          },
          "end": {
            "line": 237,
            "column": 3
          }
        },
        "66": {
          "start": {
            "line": 234,
            "column": 4
          },
          "end": {
            "line": 234,
            "column": 34
          }
        },
        "67": {
          "start": {
            "line": 235,
            "column": 9
          },
          "end": {
            "line": 237,
            "column": 3
          }
        },
        "68": {
          "start": {
            "line": 236,
            "column": 4
          },
          "end": {
            "line": 236,
            "column": 36
          }
        },
        "69": {
          "start": {
            "line": 239,
            "column": 2
          },
          "end": {
            "line": 239,
            "column": 66
          }
        },
        "70": {
          "start": {
            "line": 249,
            "column": 21
          },
          "end": {
            "line": 250,
            "column": 56
          }
        },
        "71": {
          "start": {
            "line": 250,
            "column": 2
          },
          "end": {
            "line": 250,
            "column": 56
          }
        },
        "72": {
          "start": {
            "line": 259,
            "column": 13
          },
          "end": {
            "line": 269,
            "column": 1
          }
        },
        "73": {
          "start": {
            "line": 260,
            "column": 2
          },
          "end": {
            "line": 268,
            "column": 4
          }
        },
        "74": {
          "start": {
            "line": 262,
            "column": 6
          },
          "end": {
            "line": 264,
            "column": 7
          }
        },
        "75": {
          "start": {
            "line": 263,
            "column": 8
          },
          "end": {
            "line": 263,
            "column": 28
          }
        },
        "76": {
          "start": {
            "line": 265,
            "column": 6
          },
          "end": {
            "line": 265,
            "column": 17
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 69,
              "column": 25
            },
            "end": {
              "line": 69,
              "column": null
            }
          },
          "loc": {
            "start": {
              "line": 71,
              "column": 70
            },
            "end": {
              "line": 98,
              "column": 1
            }
          }
        },
        "1": {
          "name": "(anonymous_2)",
          "decl": {
            "start": {
              "line": 77,
              "column": 9
            },
            "end": {
              "line": 77,
              "column": 10
            }
          },
          "loc": {
            "start": {
              "line": 77,
              "column": 72
            },
            "end": {
              "line": 97,
              "column": 3
            }
          }
        },
        "2": {
          "name": "(anonymous_3)",
          "decl": {
            "start": {
              "line": 87,
              "column": 20
            },
            "end": {
              "line": 87,
              "column": 31
            }
          },
          "loc": {
            "start": {
              "line": 87,
              "column": 33
            },
            "end": {
              "line": 94,
              "column": 5
            }
          }
        },
        "3": {
          "name": "(anonymous_4)",
          "decl": {
            "start": {
              "line": 107,
              "column": 21
            },
            "end": {
              "line": 107,
              "column": 22
            }
          },
          "loc": {
            "start": {
              "line": 107,
              "column": 46
            },
            "end": {
              "line": 113,
              "column": 1
            }
          }
        },
        "4": {
          "name": "(anonymous_5)",
          "decl": {
            "start": {
              "line": 121,
              "column": 33
            },
            "end": {
              "line": 121,
              "column": 34
            }
          },
          "loc": {
            "start": {
              "line": 121,
              "column": 96
            },
            "end": {
              "line": 126,
              "column": 1
            }
          }
        },
        "5": {
          "name": "(anonymous_6)",
          "decl": {
            "start": {
              "line": 134,
              "column": 28
            },
            "end": {
              "line": 134,
              "column": 29
            }
          },
          "loc": {
            "start": {
              "line": 134,
              "column": 65
            },
            "end": {
              "line": 148,
              "column": 1
            }
          }
        },
        "6": {
          "name": "(anonymous_7)",
          "decl": {
            "start": {
              "line": 156,
              "column": 28
            },
            "end": {
              "line": 156,
              "column": 29
            }
          },
          "loc": {
            "start": {
              "line": 156,
              "column": 54
            },
            "end": {
              "line": 156,
              "column": 85
            }
          }
        },
        "7": {
          "name": "(anonymous_8)",
          "decl": {
            "start": {
              "line": 167,
              "column": 36
            },
            "end": {
              "line": 167,
              "column": null
            }
          },
          "loc": {
            "start": {
              "line": 171,
              "column": 20
            },
            "end": {
              "line": 178,
              "column": 1
            }
          }
        },
        "8": {
          "name": "(anonymous_9)",
          "decl": {
            "start": {
              "line": 186,
              "column": 34
            },
            "end": {
              "line": 186,
              "column": 35
            }
          },
          "loc": {
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 187,
              "column": 74
            }
          }
        },
        "9": {
          "name": "(anonymous_10)",
          "decl": {
            "start": {
              "line": 197,
              "column": 22
            },
            "end": {
              "line": 197,
              "column": 23
            }
          },
          "loc": {
            "start": {
              "line": 198,
              "column": 2
            },
            "end": {
              "line": 198,
              "column": 37
            }
          }
        },
        "10": {
          "name": "(anonymous_11)",
          "decl": {
            "start": {
              "line": 208,
              "column": 18
            },
            "end": {
              "line": 208,
              "column": 19
            }
          },
          "loc": {
            "start": {
              "line": 208,
              "column": 98
            },
            "end": {
              "line": 213,
              "column": 1
            }
          }
        },
        "11": {
          "name": "(anonymous_12)",
          "decl": {
            "start": {
              "line": 223,
              "column": 18
            },
            "end": {
              "line": 223,
              "column": null
            }
          },
          "loc": {
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 240,
              "column": 1
            }
          }
        },
        "12": {
          "name": "(anonymous_13)",
          "decl": {
            "start": {
              "line": 249,
              "column": 21
            },
            "end": {
              "line": 249,
              "column": 22
            }
          },
          "loc": {
            "start": {
              "line": 250,
              "column": 2
            },
            "end": {
              "line": 250,
              "column": 56
            }
          }
        },
        "13": {
          "name": "(anonymous_14)",
          "decl": {
            "start": {
              "line": 259,
              "column": 13
            },
            "end": {
              "line": 259,
              "column": 14
            }
          },
          "loc": {
            "start": {
              "line": 259,
              "column": 79
            },
            "end": {
              "line": 269,
              "column": 1
            }
          }
        },
        "14": {
          "name": "(anonymous_15)",
          "decl": {
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 261,
              "column": 5
            }
          },
          "loc": {
            "start": {
              "line": 261,
              "column": 46
            },
            "end": {
              "line": 266,
              "column": 5
            }
          }
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 81,
                "column": 4
              },
              "end": {
                "line": 84,
                "column": 5
              }
            }
          ]
        },
        "1": {
          "loc": {
            "start": {
              "line": 88,
              "column": 6
            },
            "end": {
              "line": 92,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 88,
                "column": 6
              },
              "end": {
                "line": 92,
                "column": 7
              }
            }
          ]
        },
        "2": {
          "loc": {
            "start": {
              "line": 122,
              "column": 2
            },
            "end": {
              "line": 122,
              "column": 53
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 122,
                "column": 2
              },
              "end": {
                "line": 122,
                "column": 53
              }
            }
          ]
        },
        "3": {
          "loc": {
            "start": {
              "line": 140,
              "column": 2
            },
            "end": {
              "line": 145,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 140,
                "column": 2
              },
              "end": {
                "line": 145,
                "column": 3
              }
            }
          ]
        },
        "4": {
          "loc": {
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 142,
                "column": 4
              },
              "end": {
                "line": 144,
                "column": 5
              }
            }
          ]
        },
        "5": {
          "loc": {
            "start": {
              "line": 156,
              "column": 54
            },
            "end": {
              "line": 156,
              "column": 85
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 156,
                "column": 54
              },
              "end": {
                "line": 156,
                "column": 79
              }
            },
            {
              "start": {
                "line": 156,
                "column": 83
              },
              "end": {
                "line": 156,
                "column": 85
              }
            }
          ]
        },
        "6": {
          "loc": {
            "start": {
              "line": 174,
              "column": 2
            },
            "end": {
              "line": 176,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 174,
                "column": 2
              },
              "end": {
                "line": 176,
                "column": 3
              }
            }
          ]
        },
        "7": {
          "loc": {
            "start": {
              "line": 174,
              "column": 6
            },
            "end": {
              "line": 174,
              "column": 36
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 174,
                "column": 6
              },
              "end": {
                "line": 174,
                "column": 10
              }
            },
            {
              "start": {
                "line": 174,
                "column": 14
              },
              "end": {
                "line": 174,
                "column": 36
              }
            }
          ]
        },
        "8": {
          "loc": {
            "start": {
              "line": 209,
              "column": 2
            },
            "end": {
              "line": 211,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 209,
                "column": 2
              },
              "end": {
                "line": 211,
                "column": 3
              }
            }
          ]
        },
        "9": {
          "loc": {
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 209,
              "column": 36
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 209,
                "column": 6
              },
              "end": {
                "line": 209,
                "column": 19
              }
            },
            {
              "start": {
                "line": 209,
                "column": 23
              },
              "end": {
                "line": 209,
                "column": 36
              }
            }
          ]
        },
        "10": {
          "loc": {
            "start": {
              "line": 230,
              "column": 52
            },
            "end": {
              "line": 230,
              "column": 85
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 230,
                "column": 52
              },
              "end": {
                "line": 230,
                "column": 79
              }
            },
            {
              "start": {
                "line": 230,
                "column": 83
              },
              "end": {
                "line": 230,
                "column": 85
              }
            }
          ]
        },
        "11": {
          "loc": {
            "start": {
              "line": 233,
              "column": 2
            },
            "end": {
              "line": 237,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 233,
                "column": 2
              },
              "end": {
                "line": 237,
                "column": 3
              }
            },
            {
              "start": {
                "line": 235,
                "column": 9
              },
              "end": {
                "line": 237,
                "column": 3
              }
            }
          ]
        },
        "12": {
          "loc": {
            "start": {
              "line": 235,
              "column": 9
            },
            "end": {
              "line": 237,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 235,
                "column": 9
              },
              "end": {
                "line": 237,
                "column": 3
              }
            }
          ]
        },
        "13": {
          "loc": {
            "start": {
              "line": 250,
              "column": 2
            },
            "end": {
              "line": 250,
              "column": 56
            }
          },
          "type": "cond-expr",
          "locations": [
            {
              "start": {
                "line": 250,
                "column": 19
              },
              "end": {
                "line": 250,
                "column": 39
              }
            },
            {
              "start": {
                "line": 250,
                "column": 42
              },
              "end": {
                "line": 250,
                "column": 56
              }
            }
          ]
        },
        "14": {
          "loc": {
            "start": {
              "line": 262,
              "column": 6
            },
            "end": {
              "line": 264,
              "column": 7
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 262,
                "column": 6
              },
              "end": {
                "line": 264,
                "column": 7
              }
            }
          ]
        }
      },
      "s": {
        "0": 13,
        "1": 13,
        "2": 13,
        "3": 13,
        "4": 13,
        "5": 13,
        "6": 13,
        "7": 13,
        "8": 13,
        "9": 9,
        "10": 9,
        "11": 9,
        "12": 9,
        "13": 9,
        "14": 9,
        "15": 9,
        "16": 9,
        "17": 2,
        "18": 2,
        "19": 2,
        "20": 2,
        "21": 2,
        "22": 9,
        "23": 13,
        "24": 13,
        "25": 9,
        "26": 9,
        "27": 9,
        "28": 13,
        "29": 9,
        "30": 1,
        "31": 8,
        "32": 8,
        "33": 8,
        "34": 13,
        "35": 13,
        "36": 16,
        "37": 6,
        "38": 6,
        "39": 6,
        "40": 13,
        "41": 13,
        "42": 17,
        "43": 13,
        "44": 13,
        "45": 12,
        "46": 12,
        "47": 12,
        "48": 10,
        "49": 2,
        "50": 13,
        "51": 13,
        "52": 3,
        "53": 13,
        "54": 13,
        "55": 1,
        "56": 13,
        "57": 13,
        "58": 11,
        "59": 2,
        "60": 11,
        "61": 13,
        "62": 11,
        "63": 11,
        "64": 11,
        "65": 11,
        "66": 10,
        "67": 1,
        "68": 1,
        "69": 11,
        "70": 13,
        "71": 12,
        "72": 13,
        "73": 9,
        "74": 81,
        "75": 72,
        "76": 81
      },
      "f": {
        "0": 9,
        "1": 9,
        "2": 2,
        "3": 9,
        "4": 9,
        "5": 16,
        "6": 17,
        "7": 12,
        "8": 3,
        "9": 1,
        "10": 11,
        "11": 11,
        "12": 12,
        "13": 9,
        "14": 81
      },
      "b": {
        "0": [
          9
        ],
        "1": [
          2
        ],
        "2": [
          1
        ],
        "3": [
          6
        ],
        "4": [
          6
        ],
        "5": [
          17,
          10
        ],
        "6": [
          10
        ],
        "7": [
          12,
          12
        ],
        "8": [
          2
        ],
        "9": [
          11,
          11
        ],
        "10": [
          11,
          10
        ],
        "11": [
          10,
          1
        ],
        "12": [
          1
        ],
        "13": [
          10,
          2
        ],
        "14": [
          72
        ]
      }
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/typings/index.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/typings/index.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 26,
            "column": 0
          },
          "end": {
            "line": 26,
            "column": null
          }
        },
        "1": {
          "start": {
            "line": 27,
            "column": 2
          },
          "end": {
            "line": 27,
            "column": null
          }
        },
        "2": {
          "start": {
            "line": 28,
            "column": 2
          },
          "end": {
            "line": 28,
            "column": null
          }
        },
        "3": {
          "start": {
            "line": 29,
            "column": 2
          },
          "end": {
            "line": 29,
            "column": null
          }
        },
        "4": {
          "start": {
            "line": 30,
            "column": 2
          },
          "end": {
            "line": 30,
            "column": null
          }
        },
        "5": {
          "start": {
            "line": 31,
            "column": 2
          },
          "end": {
            "line": 31,
            "column": null
          }
        },
        "6": {
          "start": {
            "line": 32,
            "column": 2
          },
          "end": {
            "line": 32,
            "column": null
          }
        },
        "7": {
          "start": {
            "line": 33,
            "column": 2
          },
          "end": {
            "line": 33,
            "column": null
          }
        },
        "8": {
          "start": {
            "line": 36,
            "column": 0
          },
          "end": {
            "line": 36,
            "column": null
          }
        },
        "9": {
          "start": {
            "line": 37,
            "column": 2
          },
          "end": {
            "line": 37,
            "column": null
          }
        },
        "10": {
          "start": {
            "line": 38,
            "column": 2
          },
          "end": {
            "line": 38,
            "column": null
          }
        },
        "11": {
          "start": {
            "line": 39,
            "column": 2
          },
          "end": {
            "line": 39,
            "column": null
          }
        },
        "12": {
          "start": {
            "line": 40,
            "column": 2
          },
          "end": {
            "line": 40,
            "column": null
          }
        },
        "13": {
          "start": {
            "line": 41,
            "column": 2
          },
          "end": {
            "line": 41,
            "column": null
          }
        },
        "14": {
          "start": {
            "line": 42,
            "column": 2
          },
          "end": {
            "line": 42,
            "column": null
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": {
            "start": {
              "line": 26,
              "column": 0
            },
            "end": {
              "line": 26,
              "column": 12
            }
          },
          "loc": {
            "start": {
              "line": 26,
              "column": 21
            },
            "end": {
              "line": 34,
              "column": 1
            }
          }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 36,
              "column": 0
            },
            "end": {
              "line": 36,
              "column": 12
            }
          },
          "loc": {
            "start": {
              "line": 36,
              "column": 29
            },
            "end": {
              "line": 43,
              "column": 1
            }
          }
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 26,
              "column": 12
            },
            "end": {
              "line": 26,
              "column": null
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 26,
                "column": 12
              },
              "end": {
                "line": 26,
                "column": 21
              }
            },
            {
              "start": {
                "line": 26,
                "column": 21
              },
              "end": {
                "line": 26,
                "column": null
              }
            }
          ]
        },
        "1": {
          "loc": {
            "start": {
              "line": 36,
              "column": 12
            },
            "end": {
              "line": 36,
              "column": null
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 36,
                "column": 12
              },
              "end": {
                "line": 36,
                "column": 29
              }
            },
            {
              "start": {
                "line": 36,
                "column": 29
              },
              "end": {
                "line": 36,
                "column": null
              }
            }
          ]
        }
      },
      "s": {
        "0": 6,
        "1": 6,
        "2": 6,
        "3": 6,
        "4": 6,
        "5": 6,
        "6": 6,
        "7": 6,
        "8": 6,
        "9": 6,
        "10": 6,
        "11": 6,
        "12": 6,
        "13": 6,
        "14": 6
      },
      "f": {
        "0": 6,
        "1": 6
      },
      "b": {
        "0": [
          6,
          6
        ],
        "1": [
          6,
          6
        ]
      }
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/commons/index.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/commons/index.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 9
          }
        },
        "1": {
          "start": {
            "line": 1,
            "column": 9
          },
          "end": {
            "line": 1,
            "column": 28
          }
        },
        "2": {
          "start": {
            "line": 1,
            "column": 28
          },
          "end": {
            "line": 1,
            "column": 42
          }
        },
        "3": {
          "start": {
            "line": 1,
            "column": 42
          },
          "end": {
            "line": 1,
            "column": 86
          }
        },
        "4": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": null
          }
        },
        "5": {
          "start": {
            "line": 4,
            "column": 2
          },
          "end": {
            "line": 4,
            "column": null
          }
        },
        "6": {
          "start": {
            "line": 5,
            "column": 2
          },
          "end": {
            "line": 5,
            "column": null
          }
        },
        "7": {
          "start": {
            "line": 6,
            "column": 2
          },
          "end": {
            "line": 6,
            "column": null
          }
        },
        "8": {
          "start": {
            "line": 7,
            "column": 2
          },
          "end": {
            "line": 7,
            "column": null
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 26
            }
          },
          "loc": {
            "start": {
              "line": 1,
              "column": 9
            },
            "end": {
              "line": 1,
              "column": 28
            }
          }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 1,
              "column": 28
            },
            "end": {
              "line": 1,
              "column": 40
            }
          },
          "loc": {
            "start": {
              "line": 1,
              "column": 28
            },
            "end": {
              "line": 1,
              "column": 42
            }
          }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": {
            "start": {
              "line": 1,
              "column": 42
            },
            "end": {
              "line": 1,
              "column": 64
            }
          },
          "loc": {
            "start": {
              "line": 1,
              "column": 42
            },
            "end": {
              "line": 1,
              "column": 86
            }
          }
        },
        "3": {
          "name": "(anonymous_3)",
          "decl": {
            "start": {
              "line": 4,
              "column": 2
            },
            "end": {
              "line": 4,
              "column": 20
            }
          },
          "loc": {
            "start": {
              "line": 4,
              "column": 2
            },
            "end": {
              "line": 4,
              "column": null
            }
          }
        },
        "4": {
          "name": "(anonymous_4)",
          "decl": {
            "start": {
              "line": 5,
              "column": 2
            },
            "end": {
              "line": 5,
              "column": 22
            }
          },
          "loc": {
            "start": {
              "line": 5,
              "column": 2
            },
            "end": {
              "line": 5,
              "column": null
            }
          }
        },
        "5": {
          "name": "(anonymous_5)",
          "decl": {
            "start": {
              "line": 6,
              "column": 2
            },
            "end": {
              "line": 6,
              "column": 8
            }
          },
          "loc": {
            "start": {
              "line": 6,
              "column": 2
            },
            "end": {
              "line": 6,
              "column": null
            }
          }
        },
        "6": {
          "name": "(anonymous_6)",
          "decl": {
            "start": {
              "line": 7,
              "column": 2
            },
            "end": {
              "line": 7,
              "column": 11
            }
          },
          "loc": {
            "start": {
              "line": 7,
              "column": 2
            },
            "end": {
              "line": 7,
              "column": null
            }
          }
        }
      },
      "branchMap": {},
      "s": {
        "0": 7,
        "1": 21,
        "2": 15,
        "3": 11,
        "4": 7,
        "5": 18,
        "6": 15,
        "7": 16,
        "8": 16
      },
      "f": {
        "0": 14,
        "1": 8,
        "2": 4,
        "3": 11,
        "4": 8,
        "5": 9,
        "6": 9
      },
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/commons/corePaths.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/commons/corePaths.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 47
          }
        },
        "1": {
          "start": {
            "line": 3,
            "column": 33
          },
          "end": {
            "line": 24,
            "column": 1
          }
        },
        "2": {
          "start": {
            "line": 4,
            "column": 21
          },
          "end": {
            "line": 4,
            "column": 73
          }
        },
        "3": {
          "start": {
            "line": 6,
            "column": 2
          },
          "end": {
            "line": 23,
            "column": 4
          }
        },
        "4": {
          "start": {
            "line": 3,
            "column": 13
          },
          "end": {
            "line": 3,
            "column": 33
          }
        },
        "5": {
          "start": {
            "line": 26,
            "column": 28
          },
          "end": {
            "line": 26,
            "column": 78
          }
        },
        "6": {
          "start": {
            "line": 26,
            "column": 34
          },
          "end": {
            "line": 26,
            "column": 78
          }
        },
        "7": {
          "start": {
            "line": 26,
            "column": 68
          },
          "end": {
            "line": 26,
            "column": 77
          }
        },
        "8": {
          "start": {
            "line": 26,
            "column": 13
          },
          "end": {
            "line": 26,
            "column": 28
          }
        },
        "9": {
          "start": {
            "line": 28,
            "column": 13
          },
          "end": {
            "line": 33,
            "column": 2
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": {
            "start": {
              "line": 3,
              "column": 33
            },
            "end": {
              "line": 3,
              "column": 36
            }
          },
          "loc": {
            "start": {
              "line": 3,
              "column": 38
            },
            "end": {
              "line": 24,
              "column": 1
            }
          }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 26,
              "column": 28
            },
            "end": {
              "line": 26,
              "column": 31
            }
          },
          "loc": {
            "start": {
              "line": 26,
              "column": 34
            },
            "end": {
              "line": 26,
              "column": 78
            }
          }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": {
            "start": {
              "line": 26,
              "column": 58
            },
            "end": {
              "line": 26,
              "column": 59
            }
          },
          "loc": {
            "start": {
              "line": 26,
              "column": 68
            },
            "end": {
              "line": 26,
              "column": 77
            }
          }
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 4,
              "column": 21
            },
            "end": {
              "line": 4,
              "column": 73
            }
          },
          "type": "cond-expr",
          "locations": [
            {
              "start": {
                "line": 4,
                "column": 43
              },
              "end": {
                "line": 4,
                "column": 68
              }
            },
            {
              "start": {
                "line": 4,
                "column": 71
              },
              "end": {
                "line": 4,
                "column": 73
              }
            }
          ]
        }
      },
      "s": {
        "0": 7,
        "1": 7,
        "2": 22,
        "3": 22,
        "4": 7,
        "5": 7,
        "6": 8,
        "7": 32,
        "8": 7,
        "9": 7
      },
      "f": {
        "0": 22,
        "1": 8,
        "2": 32
      },
      "b": {
        "0": [
          11,
          11
        ]
      }
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/https-certificate/index.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/https-certificate/index.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 20
          }
        },
        "1": {
          "start": {
            "line": 3,
            "column": 31
          },
          "end": {
            "line": 15,
            "column": 1
          }
        },
        "2": {
          "start": {
            "line": 4,
            "column": 2
          },
          "end": {
            "line": 9,
            "column": 3
          }
        },
        "3": {
          "start": {
            "line": 5,
            "column": 4
          },
          "end": {
            "line": 8,
            "column": 6
          }
        },
        "4": {
          "start": {
            "line": 11,
            "column": 2
          },
          "end": {
            "line": 14,
            "column": 4
          }
        },
        "5": {
          "start": {
            "line": 3,
            "column": 13
          },
          "end": {
            "line": 3,
            "column": 31
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 3,
              "column": 31
            },
            "end": {
              "line": 3,
              "column": 32
            }
          },
          "loc": {
            "start": {
              "line": 3,
              "column": 75
            },
            "end": {
              "line": 15,
              "column": 1
            }
          }
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 4,
              "column": 2
            },
            "end": {
              "line": 9,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 4,
                "column": 2
              },
              "end": {
                "line": 9,
                "column": 3
              }
            }
          ]
        },
        "1": {
          "loc": {
            "start": {
              "line": 4,
              "column": 6
            },
            "end": {
              "line": 4,
              "column": 61
            }
          },
          "type": "binary-expr",
          "locations": [
            {
              "start": {
                "line": 4,
                "column": 6
              },
              "end": {
                "line": 4,
                "column": 29
              }
            },
            {
              "start": {
                "line": 4,
                "column": 33
              },
              "end": {
                "line": 4,
                "column": 61
              }
            }
          ]
        }
      },
      "s": {
        "0": 5,
        "1": 5,
        "2": 2,
        "3": 1,
        "4": 1,
        "5": 5
      },
      "f": {
        "0": 2
      },
      "b": {
        "0": [
          1
        ],
        "1": [
          2,
          1
        ]
      }
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/validations/index.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/validations/index.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 36
          }
        }
      },
      "fnMap": {},
      "branchMap": {},
      "s": {
        "0": 6
      },
      "f": {},
      "b": {}
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/validations/app.config.schema.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/validations/app.config.schema.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 22
          }
        },
        "1": {
          "start": {
            "line": 2,
            "column": 0
          },
          "end": {
            "line": 2,
            "column": 64
          }
        },
        "2": {
          "start": {
            "line": 4,
            "column": 30
          },
          "end": {
            "line": 10,
            "column": 1
          }
        },
        "3": {
          "start": {
            "line": 5,
            "column": 17
          },
          "end": {
            "line": 5,
            "column": 61
          }
        },
        "4": {
          "start": {
            "line": 6,
            "column": 2
          },
          "end": {
            "line": 8,
            "column": 3
          }
        },
        "5": {
          "start": {
            "line": 7,
            "column": 4
          },
          "end": {
            "line": 7,
            "column": 38
          }
        },
        "6": {
          "start": {
            "line": 9,
            "column": 2
          },
          "end": {
            "line": 9,
            "column": 22
          }
        },
        "7": {
          "start": {
            "line": 4,
            "column": 13
          },
          "end": {
            "line": 4,
            "column": 30
          }
        },
        "8": {
          "start": {
            "line": 12,
            "column": 29
          },
          "end": {
            "line": 17,
            "column": 1
          }
        },
        "9": {
          "start": {
            "line": 13,
            "column": 2
          },
          "end": {
            "line": 15,
            "column": 3
          }
        },
        "10": {
          "start": {
            "line": 14,
            "column": 4
          },
          "end": {
            "line": 14,
            "column": 47
          }
        },
        "11": {
          "start": {
            "line": 16,
            "column": 2
          },
          "end": {
            "line": 16,
            "column": 19
          }
        },
        "12": {
          "start": {
            "line": 19,
            "column": 37
          },
          "end": {
            "line": 27,
            "column": 1
          }
        },
        "13": {
          "start": {
            "line": 20,
            "column": 27
          },
          "end": {
            "line": 20,
            "column": 98
          }
        },
        "14": {
          "start": {
            "line": 20,
            "column": 71
          },
          "end": {
            "line": 20,
            "column": 97
          }
        },
        "15": {
          "start": {
            "line": 21,
            "column": 2
          },
          "end": {
            "line": 25,
            "column": 3
          }
        },
        "16": {
          "start": {
            "line": 22,
            "column": 4
          },
          "end": {
            "line": 24,
            "column": 5
          }
        },
        "17": {
          "start": {
            "line": 23,
            "column": 6
          },
          "end": {
            "line": 23,
            "column": 58
          }
        },
        "18": {
          "start": {
            "line": 26,
            "column": 2
          },
          "end": {
            "line": 26,
            "column": 27
          }
        },
        "19": {
          "start": {
            "line": 29,
            "column": 13
          },
          "end": {
            "line": 52,
            "column": 2
          }
        },
        "20": {
          "start": {
            "line": 54,
            "column": 13
          },
          "end": {
            "line": 69,
            "column": 2
          }
        },
        "21": {
          "start": {
            "line": 71,
            "column": 13
          },
          "end": {
            "line": 76,
            "column": 2
          }
        },
        "22": {
          "start": {
            "line": 78,
            "column": 36
          },
          "end": {
            "line": 83,
            "column": 1
          }
        },
        "23": {
          "start": {
            "line": 79,
            "column": 2
          },
          "end": {
            "line": 82,
            "column": 5
          }
        },
        "24": {
          "start": {
            "line": 78,
            "column": 13
          },
          "end": {
            "line": 78,
            "column": 36
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 4,
              "column": 30
            },
            "end": {
              "line": 4,
              "column": 31
            }
          },
          "loc": {
            "start": {
              "line": 4,
              "column": 71
            },
            "end": {
              "line": 10,
              "column": 1
            }
          }
        },
        "1": {
          "name": "(anonymous_2)",
          "decl": {
            "start": {
              "line": 12,
              "column": 29
            },
            "end": {
              "line": 12,
              "column": 30
            }
          },
          "loc": {
            "start": {
              "line": 12,
              "column": 69
            },
            "end": {
              "line": 17,
              "column": 1
            }
          }
        },
        "2": {
          "name": "(anonymous_3)",
          "decl": {
            "start": {
              "line": 19,
              "column": 37
            },
            "end": {
              "line": 19,
              "column": 38
            }
          },
          "loc": {
            "start": {
              "line": 19,
              "column": 82
            },
            "end": {
              "line": 27,
              "column": 1
            }
          }
        },
        "3": {
          "name": "(anonymous_4)",
          "decl": {
            "start": {
              "line": 20,
              "column": 60
            },
            "end": {
              "line": 20,
              "column": 61
            }
          },
          "loc": {
            "start": {
              "line": 20,
              "column": 71
            },
            "end": {
              "line": 20,
              "column": 97
            }
          }
        },
        "4": {
          "name": "(anonymous_5)",
          "decl": {
            "start": {
              "line": 78,
              "column": 36
            },
            "end": {
              "line": 78,
              "column": 37
            }
          },
          "loc": {
            "start": {
              "line": 78,
              "column": 66
            },
            "end": {
              "line": 83,
              "column": 1
            }
          }
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 6,
              "column": 2
            },
            "end": {
              "line": 8,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 6,
                "column": 2
              },
              "end": {
                "line": 8,
                "column": 3
              }
            }
          ]
        },
        "1": {
          "loc": {
            "start": {
              "line": 13,
              "column": 2
            },
            "end": {
              "line": 15,
              "column": 3
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 13,
                "column": 2
              },
              "end": {
                "line": 15,
                "column": 3
              }
            }
          ]
        },
        "2": {
          "loc": {
            "start": {
              "line": 22,
              "column": 4
            },
            "end": {
              "line": 24,
              "column": 5
            }
          },
          "type": "if",
          "locations": [
            {
              "start": {
                "line": 22,
                "column": 4
              },
              "end": {
                "line": 24,
                "column": 5
              }
            }
          ]
        }
      },
      "s": {
        "0": 6,
        "1": 6,
        "2": 6,
        "3": 8,
        "4": 8,
        "5": 4,
        "6": 4,
        "7": 6,
        "8": 6,
        "9": 8,
        "10": 1,
        "11": 7,
        "12": 6,
        "13": 7,
        "14": 13,
        "15": 7,
        "16": 13,
        "17": 1,
        "18": 6,
        "19": 6,
        "20": 6,
        "21": 6,
        "22": 6,
        "23": 1,
        "24": 6
      },
      "f": {
        "0": 8,
        "1": 8,
        "2": 7,
        "3": 13,
        "4": 1
      },
      "b": {
        "0": [
          4
        ],
        "1": [
          1
        ],
        "2": [
          1
        ]
      }
    },
    "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/utils/index.ts": {
      "path": "/Users/maximilianodelgado/Projects/Mex/tresdoce-nestjs-toolkit/packages/core/src/utils/index.ts",
      "statementMap": {
        "0": {
          "start": {
            "line": 20,
            "column": 35
          },
          "end": {
            "line": 24,
            "column": 1
          }
        },
        "1": {
          "start": {
            "line": 21,
            "column": 2
          },
          "end": {
            "line": 23,
            "column": 9
          }
        },
        "2": {
          "start": {
            "line": 22,
            "column": 48
          },
          "end": {
            "line": 22,
            "column": 74
          }
        },
        "3": {
          "start": {
            "line": 20,
            "column": 13
          },
          "end": {
            "line": 20,
            "column": 35
          }
        },
        "4": {
          "start": {
            "line": 82,
            "column": 35
          },
          "end": {
            "line": 89,
            "column": 2
          }
        },
        "5": {
          "start": {
            "line": 82,
            "column": 98
          },
          "end": {
            "line": 89,
            "column": 2
          }
        },
        "6": {
          "start": {
            "line": 82,
            "column": 13
          },
          "end": {
            "line": 82,
            "column": 35
          }
        }
      },
      "fnMap": {
        "0": {
          "name": "(anonymous_0)",
          "decl": {
            "start": {
              "line": 20,
              "column": 35
            },
            "end": {
              "line": 20,
              "column": 36
            }
          },
          "loc": {
            "start": {
              "line": 20,
              "column": 75
            },
            "end": {
              "line": 24,
              "column": 1
            }
          }
        },
        "1": {
          "name": "(anonymous_1)",
          "decl": {
            "start": {
              "line": 22,
              "column": 29
            },
            "end": {
              "line": 22,
              "column": 30
            }
          },
          "loc": {
            "start": {
              "line": 22,
              "column": 48
            },
            "end": {
              "line": 22,
              "column": 74
            }
          }
        },
        "2": {
          "name": "(anonymous_2)",
          "decl": {
            "start": {
              "line": 82,
              "column": 35
            },
            "end": {
              "line": 82,
              "column": 36
            }
          },
          "loc": {
            "start": {
              "line": 82,
              "column": 98
            },
            "end": {
              "line": 89,
              "column": 2
            }
          }
        }
      },
      "branchMap": {
        "0": {
          "loc": {
            "start": {
              "line": 21,
              "column": 9
            },
            "end": {
              "line": 23,
              "column": 8
            }
          },
          "type": "cond-expr",
          "locations": [
            {
              "start": {
                "line": 22,
                "column": 7
              },
              "end": {
                "line": 22,
                "column": 99
              }
            },
            {
              "start": {
                "line": 23,
                "column": 6
              },
              "end": {
                "line": 23,
                "column": 8
              }
            }
          ]
        }
      },
      "s": {
        "0": 6,
        "1": 4,
        "2": 12,
        "3": 6,
        "4": 6,
        "5": 4,
        "6": 6
      },
      "f": {
        "0": 4,
        "1": 12,
        "2": 4
      },
      "b": {
        "0": [
          2,
          2
        ]
      }
    }
  }
}